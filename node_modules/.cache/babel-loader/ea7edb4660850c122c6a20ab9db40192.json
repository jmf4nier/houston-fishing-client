{"ast":null,"code":"import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from \"../actions/types\";\nexport const fetchMessages = id => dispatch => {\n  const url = new URL(\"http://localhost:5000/messages/\");\n  const params = {\n    lake_id: id\n  }; // sets the passed in lake_id to params for the request for access in the server.\n\n  url.search = new URLSearchParams(params);\n  fetch(url).then(res => res.json()).then(result => dispatch({\n    type: FETCH_MESSAGES,\n    payload: result\n  }));\n};\nexport const postMessage = data => dispatch => {\n  console.log(data);\n  fetch(\"http://localhost:5000/messages/add\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      lake_id: data.lake_id,\n      replies: data.replies,\n      author: data.author,\n      content: data.content,\n      date: data.date\n    })\n  }).then(res => res.json()).then(result => dispatch({\n    type: POST_MESSAGE,\n    payload: result\n  }));\n};\nexport const patchMessage = data => dispatch => {\n  console.log(data);\n  fetch(\"http://localhost:5000/messages/update/\" + data.message_id, {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      reply: data.reply\n    })\n  }).then(res => res.json()).then(result => dispatch({\n    type: PATCH_MESSAGE,\n    payload: result\n  }));\n};","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\Coding\\fishing_app_houston\\Client\\src\\components\\actions\\messageActions.js"],"names":["FETCH_MESSAGES","POST_MESSAGE","PATCH_MESSAGE","fetchMessages","id","dispatch","url","URL","params","lake_id","search","URLSearchParams","fetch","then","res","json","result","type","payload","postMessage","data","console","log","method","headers","accept","body","JSON","stringify","replies","author","content","date","patchMessage","message_id","reply"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,kBAA5D;AAEA,OAAO,MAAMC,aAAa,GAAGC,EAAE,IAAIC,QAAQ,IAAI;AAC7C,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,iCAAR,CAAZ;AACA,QAAMC,MAAM,GAAG;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAf,CAF6C,CAG7C;;AACAE,EAAAA,GAAG,CAACI,MAAJ,GAAa,IAAIC,eAAJ,CAAoBH,MAApB,CAAb;AACAI,EAAAA,KAAK,CAACN,GAAD,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IACVX,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEjB,cADC;AAEPkB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAHZ;AAQD,CAbM;AAcP,OAAO,MAAMG,WAAW,GAAGC,IAAI,IAAIf,QAAQ,IAAI;AAC7CgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,EAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CW,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFiC;AAM1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBnB,MAAAA,OAAO,EAAEW,IAAI,CAACX,OADK;AAEnBoB,MAAAA,OAAO,EAAET,IAAI,CAACS,OAFK;AAGnBC,MAAAA,MAAM,EAAEV,IAAI,CAACU,MAHM;AAInBC,MAAAA,OAAO,EAAEX,IAAI,CAACW,OAJK;AAKnBC,MAAAA,IAAI,EAAEZ,IAAI,CAACY;AALQ,KAAf;AANoC,GAAvC,CAAL,CAcGnB,IAdH,CAcQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAdf,EAeGF,IAfH,CAeQG,MAAM,IACVX,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEhB,YADC;AAEPiB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAhBZ;AAqBD,CAvBM;AAwBP,OAAO,MAAMiB,YAAY,GAAGb,IAAI,IAAIf,QAAQ,IAAI;AAC9CgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,EAAAA,KAAK,CAAC,2CAA2CQ,IAAI,CAACc,UAAjD,EAA6D;AAChEX,IAAAA,MAAM,EAAE,MADwD;AAEhEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFuD;AAMhEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,MAAAA,KAAK,EAAEf,IAAI,CAACe;AADO,KAAf;AAN0D,GAA7D,CAAL,CAUGtB,IAVH,CAUQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVf,EAWGF,IAXH,CAWQG,MAAM,IACVX,QAAQ,CAAC;AACPY,IAAAA,IAAI,EAAEf,aADC;AAEPgB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAZZ;AAiBD,CAnBM","sourcesContent":["import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from \"../actions/types\";\r\n\r\nexport const fetchMessages = id => dispatch => {\r\n  const url = new URL(\"http://localhost:5000/messages/\");\r\n  const params = { lake_id: id };\r\n  // sets the passed in lake_id to params for the request for access in the server.\r\n  url.search = new URLSearchParams(params);\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: FETCH_MESSAGES,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\nexport const postMessage = data => dispatch => {\r\n  console.log(data);\r\n  fetch(\"http://localhost:5000/messages/add\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      lake_id: data.lake_id,\r\n      replies: data.replies,\r\n      author: data.author,\r\n      content: data.content,\r\n      date: data.date\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: POST_MESSAGE,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\nexport const patchMessage = data => dispatch => {\r\n  console.log(data);\r\n  fetch(\"http://localhost:5000/messages/update/\" + data.message_id, {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      reply: data.reply\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: PATCH_MESSAGE,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}