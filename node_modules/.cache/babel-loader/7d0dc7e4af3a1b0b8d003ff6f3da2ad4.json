{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\googleMaps\\\\googleMaps.js\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React from 'react';\nimport history from '../../history';\nimport ReactDOM from 'react-dom';\n\nclass MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      selectedCoordinates: {},\n      selectedLake: {}\n    };\n\n    this.onMarkerClick = lake => {\n      const lakeCoordinates = lake.coordinates;\n      this.setState({\n        selectedCoordinates: lakeCoordinates,\n        selectedLake: lake,\n        showingInfoWindow: !this.state.showingInfoWindow\n      });\n    };\n\n    this.displayMarkers = () => {\n      return this.props.lakes.map((lake, index) => {\n        return React.createElement(Marker, {\n          onClick: e => this.onMarkerClick(lake, e),\n          key: index,\n          id: index,\n          text: \"lake marker\",\n          position: {\n            lat: lake.coordinates.lat,\n            lng: lake.coordinates.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.onClose = () => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          selectedPlace: {}\n        });\n      }\n    };\n  }\n\n  onInfoWindowOpen() {\n    const link = React.createElement(\"button\", {\n      style: {\n        background: ' none!important',\n        border: 'none',\n        padding: '0!important',\n        fontFamily: 'arial, sans-serif',\n        color: '#069',\n        textDecoration: 'underline',\n        cursor: 'pointer'\n      },\n      onClick: () => this.props.handleMarkerChoice(this.state.selectedLake),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.state.selectedLake.name);\n    ReactDOM.render(React.Children.only(link), document.getElementById(\"name-link\"));\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 11,\n      style: {\n        width: '90%',\n        height: '700px',\n        marginRight: '0%',\n        marginLeft: '-45%',\n        borderRadius: '1%',\n        opacity: '.9'\n      },\n      initialCenter: {\n        lat: 29.7604,\n        lng: -95.3698\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      position: this.state.selectedCoordinates,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      onOpen: e => {\n        this.onInfoWindowOpen();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      id: \"name-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.selectedLake.description)));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBDIzsWrPiktdWsGZ4f0EM4FLMHVslvki0'\n})(MapContainer);","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\Coding\\fishing_app_houston\\Client\\src\\components\\googleMaps\\googleMaps.js"],"names":["Map","GoogleApiWrapper","Marker","InfoWindow","React","history","ReactDOM","MapContainer","Component","state","showingInfoWindow","selectedCoordinates","selectedLake","onMarkerClick","lake","lakeCoordinates","coordinates","setState","displayMarkers","props","lakes","map","index","e","lat","lng","onClose","selectedPlace","onInfoWindowOpen","link","background","border","padding","fontFamily","color","textDecoration","cursor","handleMarkerChoice","name","render","Children","only","document","getElementById","console","log","google","width","height","marginRight","marginLeft","borderRadius","opacity","description","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\r\nimport React from 'react';\r\nimport history from '../../history';\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\n\r\nclass MapContainer extends React.Component {\r\n\r\n  state = {\r\n    showingInfoWindow: false,\r\n    selectedCoordinates: {},\r\n    selectedLake: {}\r\n  }\r\n\r\n\r\n  onMarkerClick = (lake)=>{\r\n    const lakeCoordinates = lake.coordinates;\r\n    this.setState({\r\n      selectedCoordinates: lakeCoordinates,\r\n      selectedLake: lake,\r\n      showingInfoWindow: !this.state.showingInfoWindow\r\n    })\r\n  }\r\n\r\n    \r\n  displayMarkers = () => {\r\n      return this.props.lakes.map((lake, index) => {\r\n        return <Marker onClick={(e) => this.onMarkerClick( lake , e )} key={index} id={index} text='lake marker' position={{\r\n         lat: lake.coordinates.lat,\r\n         lng: lake.coordinates.lng\r\n       }}\r\n        />\r\n      })\r\n    }\r\n  onInfoWindowOpen() {\r\n    \r\n    const link = \r\n    <button \r\n    style={{background:' none!important', border: 'none', padding: '0!important', fontFamily: 'arial, sans-serif', color: '#069', textDecoration: 'underline',cursor: 'pointer',}} \r\n    onClick={() => this.props.handleMarkerChoice(this.state.selectedLake)}> \r\n    {this.state.selectedLake.name}\r\n    </button>\r\n    ReactDOM.render(\r\n      React.Children.only(link),\r\n      document.getElementById(\"name-link\")\r\n      )\r\n  }\r\n  onClose = () => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        selectedPlace: {}\r\n      })\r\n    }\r\n}\r\n\r\n\r\n  \r\n    render() {\r\n      console.log(this.props)\r\n      return (\r\n            <Map\r\n                google={this.props.google}\r\n                zoom={11}\r\n                style={{width: '90%', \r\n                height: '700px', \r\n                marginRight: '0%',\r\n                marginLeft: '-45%',\r\n                borderRadius:'1%',\r\n                opacity:'.9'}}\r\n                initialCenter={{ lat: 29.7604, lng: -95.3698}}>\r\n                {this.displayMarkers()}\r\n                <InfoWindow \r\n                    position={this.state.selectedCoordinates}\r\n                    visible={this.state.showingInfoWindow}\r\n                    onClose={this.onClose}\r\n                    onOpen={e => {\r\n                    this.onInfoWindowOpen();\r\n                    }}\r\n                > \r\n                  <h4 id='name-link' >\r\n                    \r\n                  </h4>\r\n                  <p>\r\n                    {this.state.selectedLake.description}\r\n                  </p>\r\n                </InfoWindow>\r\n            </Map>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBDIzsWrPiktdWsGZ4f0EM4FLMHVslvki0'\r\n  })(MapContainer)\r\n\r\n  \r\n\r\n\r\n \r\n\r\n  "]},"metadata":{},"sourceType":"module"}