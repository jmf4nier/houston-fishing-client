{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\lakes\\\\LakeCards.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Link from \"@material-ui/core/Link\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \".75%\",\n    maxWidth: 345,\n    height: \"45vh\" //view height to normalize size across all cards\n\n  },\n  link: {\n    fontSize: \"2vh\"\n  },\n  media: {\n    height: \"25vh\",\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nexport default function LakeCard(props) {\n  const lake = props.lake;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        expanded = _React$useState2[0],\n        setExpanded = _React$useState2[1];\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return React.createElement(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: lake.images[0],\n    title: lake.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, lake.description.slice(0, 200) + \" \", React.createElement(Link, {\n    className: classes.link,\n    href: \"#\",\n    title: \"Learn More\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"...\"))), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"share\",\n    title: \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/lakes/LakeCards.js"],"names":["React","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","Link","useStyles","theme","root","margin","maxWidth","height","link","fontSize","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","LakeCard","props","lake","classes","useState","expanded","setExpanded","handleExpandClick","images","name","description","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \".75%\",\r\n    maxWidth: 345,\r\n    height: \"45vh\" //view height to normalize size across all cards\r\n  },\r\n  link: {\r\n    fontSize: \"2vh\"\r\n  },\r\n  media: {\r\n    height: \"25vh\",\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nexport default function LakeCard(props) {\r\n  const { lake } = props;\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Link href={\"#\"}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={lake.images[0]}\r\n          title={lake.name}\r\n        />\r\n      </Link>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {lake.description.slice(0, 200) + \" \"}\r\n          <Link className={classes.link} href={\"#\"} title=\"Learn More\">\r\n            ...\r\n          </Link>\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\" title='share'>\r\n          <ShareIcon />\r\n        </IconButton>\r\n        {/* <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton> */}\r\n      </CardActions>\r\n      {/* <Collapse in={expanded} timeout=\"auto\" unmountOnExit> */}\r\n\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}