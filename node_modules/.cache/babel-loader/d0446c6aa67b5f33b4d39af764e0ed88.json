{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{FETCH_MESSAGES,POST_MESSAGE,PATCH_MESSAGE}from\"../actions/types\";var initialState={messages:[],images:[]};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_MESSAGES:return _objectSpread({},state,{messages:action.payload});case POST_MESSAGE:return _objectSpread({},state,{messages:[].concat(_toConsumableArray(state.messages),[action.payload])//existing array plus new object!\n});case PATCH_MESSAGE:return _objectSpread({},state,{messages:state.messages.map(function(message){return message._id===action.payload._id?_objectSpread({},message,{replies:action.payload.replies}):message;})});default:return state;}}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/reducers/messageReducer.js"],"names":["FETCH_MESSAGES","POST_MESSAGE","PATCH_MESSAGE","initialState","messages","images","state","action","type","payload","map","message","_id","replies"],"mappings":"2XAAA,OAASA,cAAT,CAAyBC,YAAzB,CAAuCC,aAAvC,KAA4D,kBAA5D,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,EADS,CAEnBC,MAAM,CAAE,EAFW,CAArB,CAKA,cAAe,WAAuC,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,2CACpD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKR,CAAAA,cAAL,CACE,wBACKM,KADL,EAEEF,QAAQ,CAAEG,MAAM,CAACE,OAFnB,GAKF,IAAKR,CAAAA,YAAL,CACE,wBACKK,KADL,EAEEF,QAAQ,8BAAME,KAAK,CAACF,QAAZ,GAAsBG,MAAM,CAACE,OAA7B,EAAsC;AAFhD,GAIF,IAAKP,CAAAA,aAAL,CACE,wBACKI,KADL,EAEEF,QAAQ,CAAEE,KAAK,CAACF,QAAN,CAAeM,GAAf,CAAmB,SAAAC,OAAO,QAClCA,CAAAA,OAAO,CAACC,GAAR,GAAgBL,MAAM,CAACE,OAAP,CAAeG,GAA/B,kBAGSD,OAHT,EAIME,OAAO,CAAEN,MAAM,CAACE,OAAP,CAAeI,OAJ9B,GAMIF,OAP8B,EAA1B,CAFZ,GAYF,QACE,MAAOL,CAAAA,KAAP,CA1BJ,CA4BD","sourcesContent":["import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  images: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.payload\r\n      };\r\n\r\n    case POST_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload] //existing array plus new object!\r\n      };\r\n    case PATCH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.map(message =>\r\n          message._id === action.payload._id\r\n            ? {\r\n                // finds matching message and replaces the replies Array\r\n                ...message,\r\n                replies: action.payload.replies\r\n              }\r\n            : message\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}