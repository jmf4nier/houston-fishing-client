{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './components/reducers';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\n// const initialState = {};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['userReducer']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middleware = [thunk];\nexport const store = createStore(persistedReducer, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:\\Users\\Jason\\Documents\\Documents\\code\\fishing_app_houston\\Client\\src\\store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","persistStore","persistReducer","storage","persistConfig","key","blacklist","persistedReducer","middleware","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;AAIhD;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBF,EAAAA,OAFkB;AAGlBG,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHO,CAAtB;AAKA,MAAMC,gBAAgB,GAAGL,cAAc,CAACE,aAAD,EAAgBJ,WAAhB,CAAvC;AACA,MAAMQ,UAAU,GAAG,CAACT,KAAD,CAAnB;AAIA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CACzBW,gBADyB,EAExBT,OAAO,CACHD,eAAe,CAAC,GAAGW,UAAJ,CADZ,EAEHE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFpC,CAFiB,CAAzB;AAOP,OAAO,MAAMC,SAAS,GAAGX,YAAY,CAACQ,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './components/reducers'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\r\n\r\n\r\n\r\n// const initialState = {};\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    blacklist: ['userReducer']\r\n  }\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst middleware = [thunk];\r\n\r\n\r\n\r\nexport const store = createStore(\r\n       persistedReducer, \r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n    );\r\nexport const persistor = persistStore(store);\r\n    "]},"metadata":{},"sourceType":"module"}