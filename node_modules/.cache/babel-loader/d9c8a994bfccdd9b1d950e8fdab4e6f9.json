{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { FETCH_LAKES, CURRENT_LAKE, FAVORITED_LAKE } from \"../actions/types\";\nconst initialState = {\n  lakes: [],\n  currentLake: {},\n  favoritedLakes: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_LAKES:\n      return _objectSpread({}, state, {\n        lakes: action.payload\n      });\n\n    case CURRENT_LAKE:\n      return _objectSpread({}, state, {\n        currentLake: action.payload\n      });\n\n    case FAVORITED_LAKE:\n      // I think i understand this now. you are assigning a value, in this case a lake name, a value of true if it isnt already in the object.  if its in the object such as flags = {'buffalo run': true} it will return false \n      const newState = [...state.favoritedLakes, action.payload];\n      const flags = {};\n      const newLakes = newState.filter(function (lake) {\n        console.log(flags);\n\n        if (flags[lake.name]) {\n          return false;\n        }\n\n        flags[lake.name] = true;\n        return true;\n      });\n      return _objectSpread({}, state, {\n        favoritedLakes: newLakes\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/reducers/lakeReducer.js"],"names":["FETCH_LAKES","CURRENT_LAKE","FAVORITED_LAKE","initialState","lakes","currentLake","favoritedLakes","state","action","type","payload","newState","flags","newLakes","filter","lake","console","log","name"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAoCC,cAApC,QAA0D,kBAA1D;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,WAAW,EAAE,EAFO;AAGpBC,EAAAA,cAAc,EAAE;AAHI,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKT,WAAL;AACC,+BACIO,KADJ;AAECH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFf;;AAID,SAAKT,YAAL;AACC,+BACIM,KADJ;AAECF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFrB;;AAID,SAAKR,cAAL;AACI;AACA,YAAMS,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACD,cAAV,EAA0BE,MAAM,CAACE,OAAjC,CAAjB;AACH,YAAME,KAAK,GAAG,EAAd;AACA,YAAMC,QAAQ,GAAGF,QAAQ,CAACG,MAAT,CAAgB,UAASC,IAAT,EAAe;AAC3CC,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACJ,YAAIA,KAAK,CAACG,IAAI,CAACG,IAAN,CAAT,EAAsB;AAErB,iBAAO,KAAP;AACI;;AAELN,QAAAA,KAAK,CAACG,IAAI,CAACG,IAAN,CAAL,GAAmB,IAAnB;AACA,eAAO,IAAP;AACA,OATgB,CAAjB;AAWA,+BACIX,KADJ;AAECD,QAAAA,cAAc,EAAEO;AAFjB;;AAID;AACC,aAAON,KAAP;AA/BF;AAiCA","sourcesContent":["import { FETCH_LAKES, CURRENT_LAKE, FAVORITED_LAKE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\tlakes: [],\r\n\tcurrentLake: {},\r\n\tfavoritedLakes: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_LAKES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlakes: action.payload\r\n\t\t\t};\r\n\t\tcase CURRENT_LAKE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentLake: action.payload\r\n\t\t\t};\r\n\t\tcase FAVORITED_LAKE:\r\n      // I think i understand this now. you are assigning a value, in this case a lake name, a value of true if it isnt already in the object.  if its in the object such as flags = {'buffalo run': true} it will return false \r\n      const newState = [...state.favoritedLakes, action.payload]\r\n\t\t\tconst flags = {};\r\n\t\t\tconst newLakes = newState.filter(function(lake) {\r\n        console.log(flags)\r\n\t\t\t\tif (flags[lake.name]) {\r\n          \r\n\t\t\t\t\treturn false;\r\n        }\r\n        \r\n\t\t\t\tflags[lake.name] = true;\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfavoritedLakes: newLakes\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}