{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Jason\\\\Documents\\\\Documents\\\\code\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Documents\\\\Documents\\\\code\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\navBar\\\\clickOutside.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport default class ClickOutside extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handle = e => {\n      if (e.type === 'touchend') this.isTouch = true;\n      if (e.type === 'click' && this.isTouch) return;\n      const onClickOutside = this.props.onClickOutside;\n      const el = this.container;\n      if (el && !el.contains(e.target)) onClickOutside(e);\n    };\n\n    this.getContainer = this.getContainer.bind(this);\n    this.isTouch = false;\n  }\n\n  getContainer(ref) {\n    this.container = ref;\n  }\n\n  render() {\n    const _this$props = this.props,\n          children = _this$props.children,\n          onClickOutside = _this$props.onClickOutside,\n          props = _objectWithoutProperties(_this$props, [\"children\", \"onClickOutside\"]);\n\n    return React.createElement(\"div\", Object.assign({}, props, {\n      ref: this.getContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), children);\n  }\n\n  componentDidMount() {\n    document.addEventListener('touchend', this.handle, true);\n    document.addEventListener('click', this.handle, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('touchend', this.handle, true);\n    document.removeEventListener('click', this.handle, true);\n  }\n\n}\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\Jason\\Documents\\Documents\\code\\fishing_app_houston\\Client\\src\\components\\navBar\\clickOutside.js"],"names":["React","Component","PropTypes","ClickOutside","constructor","props","handle","e","type","isTouch","onClickOutside","el","container","contains","target","getContainer","bind","ref","render","children","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAKlDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBnBC,MAzBmB,GAyBVC,CAAC,IAAI;AACZ,UAAIA,CAAC,CAACC,IAAF,KAAW,UAAf,EAA2B,KAAKC,OAAL,GAAe,IAAf;AAC3B,UAAIF,CAAC,CAACC,IAAF,KAAW,OAAX,IAAsB,KAAKC,OAA/B,EAAwC;AAF5B,YAGJC,cAHI,GAGe,KAAKL,KAHpB,CAGJK,cAHI;AAIZ,YAAMC,EAAE,GAAG,KAAKC,SAAhB;AACA,UAAID,EAAE,IAAI,CAACA,EAAE,CAACE,QAAH,CAAYN,CAAC,CAACO,MAAd,CAAX,EAAkCJ,cAAc,CAACH,CAAD,CAAd;AACnC,KA/BkB;;AAEjB,SAAKQ,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKP,OAAL,GAAe,KAAf;AACD;;AAEDM,EAAAA,YAAY,CAACE,GAAD,EAAM;AAChB,SAAKL,SAAL,GAAiBK,GAAjB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKb,KAD7C;AAAA,UACCc,QADD,eACCA,QADD;AAAA,UACWT,cADX,eACWA,cADX;AAAA,UAC8BL,KAD9B;;AAEP,WAAO,6CAASA,KAAT;AAAgB,MAAA,GAAG,EAAE,KAAKU,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAyCI,QAAzC,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAKhB,MAA3C,EAAmD,IAAnD;AACAe,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKhB,MAAxC,EAAgD,IAAhD;AACD;;AAEDiB,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,UAA7B,EAAyC,KAAKlB,MAA9C,EAAsD,IAAtD;AACAe,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKlB,MAA3C,EAAmD,IAAnD;AACD;;AA5BiD;AAA/BH,Y,CACZsB,S,GAAY;AACjBf,EAAAA,cAAc,EAAER,SAAS,CAACwB,IAAV,CAAeC;AADd,C","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ClickOutside extends Component {\r\n  static propTypes = {\r\n    onClickOutside: PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.getContainer = this.getContainer.bind(this)\r\n    this.isTouch = false\r\n  }\r\n\r\n  getContainer(ref) {\r\n    this.container = ref\r\n  }\r\n\r\n  render() {\r\n    const { children, onClickOutside, ...props } = this.props\r\n    return <div {...props} ref={this.getContainer}>{children}</div>\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('touchend', this.handle, true)\r\n    document.addEventListener('click', this.handle, true)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('touchend', this.handle, true)\r\n    document.removeEventListener('click', this.handle, true)\r\n  }\r\n\r\n  handle = e => {\r\n    if (e.type === 'touchend') this.isTouch = true\r\n    if (e.type === 'click' && this.isTouch) return\r\n    const { onClickOutside } = this.props\r\n    const el = this.container\r\n    if (el && !el.contains(e.target)) onClickOutside(e)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}