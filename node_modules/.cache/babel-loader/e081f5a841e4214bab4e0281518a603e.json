{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\navBar\\\\MultipleSelect.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = ['Oliver Hansen', 'Van Henry', 'April Tucker', 'Ralph Hubbard', 'Omar Alexander', 'Carlos Abbott', 'Miriam Wagner', 'Bradley Wilkerson', 'Virginia Andrews', 'Kelly Snyder'];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelect() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        personName = _React$useState2[0],\n        setPersonName = _React$useState2[1];\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const options = event.target.options;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-name-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Select, {\n    labelId: \"demo-mutiple-name-label\",\n    id: \"demo-mutiple-name\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Chip\"), React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }),\n    renderValue: selected => React.createElement(\"div\", {\n      className: classes.chips,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, selected.map(value => React.createElement(Chip, {\n      key: value,\n      label: value,\n      className: classes.chip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, name)))), React.createElement(FormControl, {\n    className: clsx(classes.formControl, classes.noLabel),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Select, {\n    multiple: true,\n    displayEmpty: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }),\n    renderValue: selected => {\n      if (selected.length === 0) {\n        return React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Placeholder\");\n      }\n\n      return selected.join(', ');\n    },\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    disabled: true,\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Placeholder\")), names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, name)))), React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"select-multiple-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Native\"), React.createElement(Select, {\n    multiple: true,\n    native: true,\n    value: personName,\n    onChange: handleChangeMultiple,\n    inputProps: {\n      id: 'select-multiple-native'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, names.map(name => React.createElement(\"option\", {\n    key: name,\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, name)))));\n}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/navBar/MultipleSelect.js"],"names":["React","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","classes","useState","setPersonName","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","map","join","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = event => {\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  const handleChangeMultiple = event => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-name-label\">Name</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-mutiple-name\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-chip-label\">Chip</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          id=\"demo-mutiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={selected => (\r\n            <div className={classes.chips}>\r\n              {selected.map(value => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={clsx(classes.formControl, classes.noLabel)}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={selected => {\r\n            if (selected.length === 0) {\r\n              return <em>Placeholder</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Placeholder</em>\r\n          </MenuItem>\r\n          {names.map(name => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n          Native\r\n        </InputLabel>\r\n        <Select\r\n          multiple\r\n          native\r\n          value={personName}\r\n          onChange={handleChangeMultiple}\r\n          inputProps={{\r\n            id: 'select-multiple-native',\r\n          }}\r\n        >\r\n          {names.map(name => (\r\n            <option key={name} value={name}>\r\n              {name}\r\n            </option>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}