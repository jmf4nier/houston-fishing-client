{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\navBar\\\\MultipleSelect.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Chip from \"@material-ui/core/Chip\";\nimport json2mq from \"json2mq\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 2\n  },\n  noLabel: {\n    marginTop: theme.spacing(3)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst names = [\"Oliver Hansen\", \"Van Henry\", \"April Tucker\", \"Ralph Hubbard\", \"Omar Alexander\", \"Carlos Abbott\", \"Miriam Wagner\", \"Bradley Wilkerson\", \"Virginia Andrews\", \"Kelly Snyder\"];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function MultipleSelect() {\n  const matches = useMediaQuery(json2mq({\n    minWidth: 800\n  }));\n  console.log(matches);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        personName = _React$useState2[0],\n        setPersonName = _React$useState2[1];\n\n  const handleChange = event => {\n    setPersonName(event.target.value);\n  };\n\n  const handleChangeMultiple = event => {\n    const options = event.target.options;\n    const value = [];\n\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setPersonName(value);\n  };\n\n  const desktopView = React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-mutiple-chip-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Species\"), React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    multiple: true,\n    value: personName,\n    onChange: handleChange,\n    input: React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    renderValue: selected => React.createElement(\"div\", {\n      className: classes.chips,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, selected.map(value => React.createElement(Chip, {\n      key: value,\n      label: value,\n      className: classes.chip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))),\n    MenuProps: MenuProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, names.map(name => React.createElement(MenuItem, {\n    key: name,\n    value: name,\n    style: getStyles(name, personName, theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, name))));\n  const mobileView = React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"select-multiple-native\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Native\"), React.createElement(Select, {\n    multiple: true,\n    native: true,\n    value: personName,\n    onChange: handleChangeMultiple,\n    inputProps: {\n      id: \"select-multiple-native\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, names.map(name => React.createElement(\"option\", {\n    key: name,\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, name))));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, desktopView);\n}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/navBar/MultipleSelect.js"],"names":["React","clsx","makeStyles","useTheme","Input","InputLabel","MenuItem","FormControl","ListItemText","Select","Checkbox","Chip","json2mq","useMediaQuery","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","names","getStyles","name","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleSelect","matches","console","log","classes","useState","setPersonName","handleChange","event","target","value","handleChangeMultiple","options","i","l","length","selected","push","desktopView","map","mobileView","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport json2mq from \"json2mq\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tformControl: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tminWidth: 120,\r\n\t\tmaxWidth: 300\r\n\t},\r\n\r\n\tchips: {\r\n\t\tdisplay: \"flex\",\r\n\t\tflexWrap: \"wrap\"\r\n\t},\r\n\tchip: {\r\n\t\tmargin: 2\r\n\t},\r\n\tnoLabel: {\r\n\t\tmarginTop: theme.spacing(3)\r\n\t}\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n\tPaperProps: {\r\n\t\tstyle: {\r\n\t\t\tmaxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n\t\t\twidth: 250\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst names = [\r\n\t\"Oliver Hansen\",\r\n\t\"Van Henry\",\r\n\t\"April Tucker\",\r\n\t\"Ralph Hubbard\",\r\n\t\"Omar Alexander\",\r\n\t\"Carlos Abbott\",\r\n\t\"Miriam Wagner\",\r\n\t\"Bradley Wilkerson\",\r\n\t\"Virginia Andrews\",\r\n\t\"Kelly Snyder\"\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n\treturn {\r\n\t\tfontWeight:\r\n\t\t\tpersonName.indexOf(name) === -1\r\n\t\t\t\t? theme.typography.fontWeightRegular\r\n\t\t\t\t: theme.typography.fontWeightMedium\r\n\t};\r\n}\r\n\r\nexport default function MultipleSelect() {\r\n\tconst matches = useMediaQuery(\r\n\t\tjson2mq({\r\n\t\t\tminWidth: 800\r\n\t\t})\r\n    );\r\n    console.log(matches)\r\n\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [personName, setPersonName] = React.useState([]);\r\n\r\n\tconst handleChange = event => {\r\n\t\tsetPersonName(event.target.value);\r\n\t};\r\n\t\r\n\tconst handleChangeMultiple = event => {\r\n\t\tconst { options } = event.target;\r\n\t\tconst value = [];\r\n\t\tfor (let i = 0, l = options.length; i < l; i += 1) {\r\n\t\t\tif (options[i].selected) {\r\n\t\t\t\tvalue.push(options[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetPersonName(value);\r\n    };\r\n    const desktopView = (\r\n\t\t<FormControl className={classes.formControl}>\r\n\t\t\t<InputLabel id=\"demo-mutiple-chip-label\">Species</InputLabel>\r\n\t\t\t<Select\r\n\t\t\t\tlabelId=\"demo-mutiple-chip-label\"\r\n\t\t\t\tid=\"demo-mutiple-chip\"\r\n\t\t\t\tmultiple\r\n\t\t\t\tvalue={personName}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tinput={<Input id=\"select-multiple-chip\" />}\r\n\t\t\t\trenderValue={selected => (\r\n\t\t\t\t\t<div className={classes.chips}>\r\n\t\t\t\t\t\t{selected.map(value => (\r\n\t\t\t\t\t\t\t<Chip key={value} label={value} className={classes.chip} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\tMenuProps={MenuProps}\r\n\t\t\t>\r\n\t\t\t\t{names.map(name => (\r\n\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\tkey={name}\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tstyle={getStyles(name, personName, theme)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t);\r\n\tconst mobileView = (\r\n\t\t<FormControl className={classes.formControl}>\r\n\t\t\t<InputLabel shrink htmlFor=\"select-multiple-native\">\r\n\t\t\t\tNative\r\n\t\t\t</InputLabel>\r\n\t\t\t<Select\r\n\t\t\t\tmultiple\r\n\t\t\t\tnative\r\n\t\t\t\tvalue={personName}\r\n\t\t\t\tonChange={handleChangeMultiple}\r\n\t\t\t\tinputProps={{\r\n\t\t\t\t\tid: \"select-multiple-native\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{names.map(name => (\r\n\t\t\t\t\t<option key={name} value={name}>\r\n\t\t\t\t\t\t{name}\r\n\t\t\t\t\t</option>\r\n\t\t\t\t))}\r\n\t\t\t</Select>\r\n\t\t</FormControl>\r\n\t);\r\n\r\n\treturn <div>\r\n        {desktopView}\r\n    </div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}