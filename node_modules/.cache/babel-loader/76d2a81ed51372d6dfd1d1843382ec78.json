{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\userForms\\\\Login.js\";\nimport React, { useState } from \"react\";\nexport default function LoginPage() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const handleChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    }\n\n    if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n\n    return e;\n  };\n\n  const handleErrors = response => {\n    console.log(response.statusText, response.status);\n\n    if (!response.ok) {\n      setError(response.statusText + response.status);\n      throw Error(response.statusText);\n    }\n\n    return response;\n  };\n\n  const handleSubmit = () => {\n    fetch(\"http://localhost:5000/users/login\", {\n      method: \"POST\",\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    }).then(rsp => handleErrors(rsp)).then(rsp => rsp.json()).then(response => {\n      //jwt token or error message\n      console.log(response);\n    }).catch(error => console.log(error));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    required: true,\n    name: \"email\",\n    placeholder: \"email\",\n    onChange: e => handleChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    required: true,\n    name: \"password\",\n    placeholder: \"password\",\n    onChange: e => handleChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    onClick: () => handleSubmit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), error !== null ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, error) : null);\n}","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\Coding\\fishing_app_houston\\Client\\src\\components\\userForms\\Login.js"],"names":["React","useState","LoginPage","email","setEmail","password","setPassword","error","setError","handleChange","e","target","name","value","handleErrors","response","console","log","statusText","status","ok","Error","handleSubmit","fetch","method","mode","headers","body","JSON","stringify","then","rsp","json","catch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA,oBACND,QAAQ,CAAC,IAAD,CADF;AAAA;AAAA,QACzBE,KADyB;AAAA,QAClBC,QADkB;;AAAA,qBAEAH,QAAQ,CAAC,IAAD,CAFR;AAAA;AAAA,QAEzBI,QAFyB;AAAA,QAEfC,WAFe;;AAAA,qBAGNL,QAAQ,CAAC,IAAD,CAHF;AAAA;AAAA,QAGzBM,KAHyB;AAAA,QAGlBC,QAHkB;;AAKhC,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,OAAtB,EAA+B;AAC3BR,MAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASE,KAAV,CAAR;AACH;;AACD,QAAIH,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAC9BN,MAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASE,KAAV,CAAX;AACH;;AAED,WAAOH,CAAP;AACH,GATD;;AAUA,QAAMI,YAAY,GAAIC,QAAD,IAAc;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,UAArB,EAAiCH,QAAQ,CAACI,MAA1C;;AACA,QAAI,CAACJ,QAAQ,CAACK,EAAd,EAAkB;AACdZ,MAAAA,QAAQ,CAACO,QAAQ,CAACG,UAAT,GAAsBH,QAAQ,CAACI,MAAhC,CAAR;AACA,YAAME,KAAK,CAACN,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,WAAOH,QAAP;AACH,GAPD;;AASA,QAAMO,YAAY,GAAG,MAAM;AACvBC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAE,MAFiC;AAGvCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAH8B;AAMvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,iBAAS1B,KADQ;AAEjB,oBAAYE;AAFK,OAAf;AANiC,KAAtC,CAAL,CAWCyB,IAXD,CAWOC,GAAD,IAAQjB,YAAY,CAACiB,GAAD,CAX1B,EAYCD,IAZD,CAYMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAZb,EAaCF,IAbD,CAaMf,QAAQ,IAAE;AACZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAhBD,EAiBCkB,KAjBD,CAiBO1B,KAAK,IAAGS,OAAO,CAACC,GAAR,CAAYV,KAAZ,CAjBf;AAmBH,GApBD;;AAqBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,OAJhB;AAKI,IAAA,QAAQ,EAAEG,CAAC,IAAID,YAAY,CAACC,CAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,QAAQ,EAAEA,CAAC,IAAID,YAAY,CAACC,CAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAgBI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,OAAO,EAAE,MAAMY,YAAY,EAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADA,EAuBEf,KAAK,KAAK,IAAX,GAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CAAjB,GAAmC,IAvBpC,CADJ;AA2BH","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function LoginPage() {\r\n    const [email, setEmail] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [error, setError] = useState(null)\r\n\r\n    const handleChange = e => {\r\n        if (e.target.name === \"email\") {\r\n            setEmail(e.target.value);\r\n        }\r\n        if (e.target.name === \"password\") {\r\n            setPassword(e.target.value);\r\n        }\r\n      \r\n        return e;\r\n    }\r\n    const handleErrors = (response) => {\r\n        console.log(response.statusText, response.status)\r\n        if (!response.ok) {\r\n            setError(response.statusText + response.status)\r\n            throw Error(response.statusText);\r\n        }\r\n        return response;\r\n    }\r\n    \r\n    const handleSubmit = () => {\r\n        fetch(\"http://localhost:5000/users/login\", {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"email\": email,\r\n                \"password\": password\r\n            })\r\n        })\r\n        .then((rsp)=> handleErrors(rsp))\r\n        .then(rsp => rsp.json())\r\n        .then(response=>{\r\n            //jwt token or error message\r\n            console.log(response)\r\n        })\r\n        .catch(error =>console.log(error))\r\n        \r\n    };\r\n    return (\r\n        <div>\r\n        <form>\r\n            <input\r\n                type=\"text\"\r\n                required\r\n                name=\"email\"\r\n                placeholder=\"email\"\r\n                onChange={e => handleChange(e)}\r\n            />\r\n           \r\n            <input\r\n                type=\"password\"\r\n                required\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                onChange={e => handleChange(e)}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                onClick={() => handleSubmit()}\r\n            />\r\n        </form>\r\n        {(error !== null)?<h1>{error}</h1>: null}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}