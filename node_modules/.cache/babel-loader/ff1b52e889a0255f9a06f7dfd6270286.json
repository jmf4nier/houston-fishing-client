{"ast":null,"code":"import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from '../actions/types';\nexport const fetchMessages = id => dispatch => {\n  const url = new URL('http://localhost:5000/messages/');\n  const params = {\n    lake_id: id // sets the passed in lake_id to params for the request for access in the server.\n\n  };\n  url.search = new URLSearchParams(params);\n  fetch(url).then(res => res.json()).then(result => dispatch({\n    type: FETCH_MESSAGES,\n    payload: result\n  }));\n};\nexport const postMessage = data => dispatch => {\n  console.log(data);\n  fetch('http://localhost:5000/messages/add', {\n    method: 'POST',\n    headers: {\n      'accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      lake_id: data.lake_id,\n      replies: data.replies,\n      author: data.author,\n      content: data.content,\n      date: data.date\n    })\n  }).then(res => res.json()).then(result => dispatch({\n    type: POST_MESSAGE,\n    payload: result\n  }));\n};\nexport const patchMessage = data => dispatch => {\n  console.log(data);\n  fetch('http://localhost:5000/messages/update/' + data.message_id, {\n    method: 'POST',\n    headers: {\n      'accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      reply: data.reply\n    })\n  }).then(res => res.json()).then(result => dispatch({\n    type: PATCH_MESSAGE,\n    payload: result\n  }));\n};","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\Coding\\fishing_app_houston\\Client\\src\\components\\actions\\messageActions.js"],"names":["FETCH_MESSAGES","POST_MESSAGE","PATCH_MESSAGE","fetchMessages","id","dispatch","url","URL","params","lake_id","search","URLSearchParams","fetch","then","res","json","result","type","payload","postMessage","data","console","log","method","headers","body","JSON","stringify","replies","author","content","date","patchMessage","message_id","reply"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,kBAA5D;AAGA,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAQC,QAAQ,IAAG;AAE5C,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,iCAAR,CAAZ;AACA,QAAMC,MAAM,GAAG;AAACC,IAAAA,OAAO,EAAEL,EAAV,CACf;;AADe,GAAf;AAEAE,EAAAA,GAAG,CAACI,MAAJ,GAAa,IAAIC,eAAJ,CAAoBH,MAApB,CAAb;AACAI,EAAAA,KAAK,CAACN,GAAD,CAAL,CACCO,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,MAAM,IAAIX,QAAQ,CAAC;AACrBY,IAAAA,IAAI,EAAEjB,cADe;AAErBkB,IAAAA,OAAO,EAAEF;AAFY,GAAD,CAFxB;AAMH,CAZM;AAaP,OAAO,MAAMG,WAAW,GAAIC,IAAD,IAAUf,QAAQ,IAAG;AAC5CgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,EAAAA,KAAK,CAAC,oCAAD,EAAsC;AACvCW,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAF8B;AAMvCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBlB,MAAAA,OAAO,EAAEW,IAAI,CAACX,OADG;AAEjBmB,MAAAA,OAAO,EAAER,IAAI,CAACQ,OAFG;AAGjBC,MAAAA,MAAM,EAAET,IAAI,CAACS,MAHI;AAIjBC,MAAAA,OAAO,EAAEV,IAAI,CAACU,OAJG;AAKjBC,MAAAA,IAAI,EAAEX,IAAI,CAACW;AALM,KAAf;AANiC,GAAtC,CAAL,CAcClB,IAdD,CAcMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAdb,EAeCF,IAfD,CAeMG,MAAM,IAAIX,QAAQ,CAAC;AACrBY,IAAAA,IAAI,EAAEhB,YADe;AAErBiB,IAAAA,OAAO,EAAEF;AAFY,GAAD,CAfxB;AAmBH,CArBM;AAsBP,OAAO,MAAMgB,YAAY,GAAIZ,IAAD,IAAWf,QAAD,IAAc;AACnDgB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACDR,EAAAA,KAAK,CAAC,2CAA0CQ,IAAI,CAACa,UAAhD,EAA2D;AAC5DV,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFmD;AAM5DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBO,MAAAA,KAAK,EAAEd,IAAI,CAACc;AADK,KAAf;AANsD,GAA3D,CAAL,CAUCrB,IAVD,CAUMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVb,EAWCF,IAXD,CAWMG,MAAM,IAERX,QAAQ,CAAC;AACTY,IAAAA,IAAI,EAAEf,aADG;AAETgB,IAAAA,OAAO,EAAEF;AAFA,GAAD,CAbZ;AAiBC,CAnBM","sourcesContent":["import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from '../actions/types';\r\n\r\n\r\nexport const fetchMessages = (id) => dispatch =>{\r\n    \r\n    const url = new URL('http://localhost:5000/messages/')\r\n    const params = {lake_id: id}    \r\n    // sets the passed in lake_id to params for the request for access in the server.\r\n    url.search = new URLSearchParams(params)\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(result => dispatch({\r\n        type: FETCH_MESSAGES,\r\n        payload: result\r\n    }))\r\n}\r\nexport const postMessage = (data) => dispatch =>{\r\n    console.log(data)\r\n    fetch('http://localhost:5000/messages/add',{\r\n        method: 'POST',\r\n        headers: {\r\n            'accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            lake_id: data.lake_id ,\r\n            replies: data.replies,\r\n            author: data.author,\r\n            content: data.content,\r\n            date: data.date,\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => dispatch({\r\n        type: POST_MESSAGE,\r\n        payload: result\r\n    }))\r\n}\r\nexport const patchMessage = (data) => (dispatch) => {\r\n console.log(data)\r\nfetch('http://localhost:5000/messages/update/'+ data.message_id,{\r\n    method: 'POST',\r\n    headers: {\r\n        'accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n        reply: data.reply,\r\n    })\r\n})\r\n.then(res => res.json())\r\n.then(result => \r\n    \r\n    dispatch({\r\n    type: PATCH_MESSAGE,\r\n    payload: result\r\n}))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}