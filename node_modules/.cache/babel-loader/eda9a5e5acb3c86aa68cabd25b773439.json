{"ast":null,"code":"import React,{useEffect}from\"react\";import LakeCards from\"./LakeCards\";import{Grid}from\"@material-ui/core\";import{fetchLakes}from\"../actions/lakeActions\";import{useDispatch,useSelector}from\"react-redux\";var Home=function Home(){var dispatch=useDispatch();useEffect(function(){fetchLakes(dispatch);},[dispatch]);var lakes=useSelector(function(state){return state.lakeReducer.lakes;});var search=useSelector(function(state){return state.searchBarReducer.searchParams;});var speciesFilter=useSelector(function(state){return state.searchBarReducer.speciesFilter;});var locationFilter=useSelector(function(state){return state.searchBarReducer.locationFilter;});// species filter\nvar filterOne=lakes.filter(function(lake){if(speciesFilter!==\"all\"){return lake.species.includes(speciesFilter);}else return true;});// second layer filter for location\nvar filterTwo=filterOne.filter(function(lake){if(locationFilter!==\"all\"){return lake.locality.includes(locationFilter);}else return true;;});//third layer filter by\nvar searchFilteredCards=filterTwo.filter(function(lake){var name=lake.name;var searchTerm=search.toLowerCase();var lowerCaseName=name.toLowerCase();return lowerCaseName.includes(searchTerm);});return React.createElement(\"div\",null,React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\"},searchFilteredCards.length===0?React.createElement(\"h1\",{style:{marginTop:'5rem'}},\"Nothing Found for Those Search Criteria\"):searchFilteredCards.map(function(lake){return React.createElement(LakeCards,{key:lake._id,lake:lake});})));};export default Home;","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/lakes/LakeHome.js"],"names":["React","useEffect","LakeCards","Grid","fetchLakes","useDispatch","useSelector","Home","dispatch","lakes","state","lakeReducer","search","searchBarReducer","searchParams","speciesFilter","locationFilter","filterOne","filter","lake","species","includes","filterTwo","locality","searchFilteredCards","name","searchTerm","toLowerCase","lowerCaseName","length","marginTop","map","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAASC,UAAT,KAA2B,wBAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CAClB,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACAJ,SAAS,CAAC,UAAM,CACfG,UAAU,CAACI,QAAD,CAAV,CACA,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAGA,GAAMC,CAAAA,KAAK,CAAGH,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkBF,KAAtB,EAAN,CAAzB,CACA,GAAMG,CAAAA,MAAM,CAAGN,WAAW,CAAC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACG,gBAAN,CAAuBC,YAA3B,EAAN,CAA1B,CACA,GAAMC,CAAAA,aAAa,CAAGT,WAAW,CAChC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACG,gBAAN,CAAuBE,aAA3B,EAD2B,CAAjC,CAGA,GAAMC,CAAAA,cAAc,CAAGV,WAAW,CACjC,SAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACG,gBAAN,CAAuBG,cAA3B,EAD4B,CAAlC,CAGA;AACA,GAAMC,CAAAA,SAAS,CAAGR,KAAK,CAACS,MAAN,CAAa,SAAAC,IAAI,CAAI,CACtC,GAAIJ,aAAa,GAAK,KAAtB,CAA6B,CAC5B,MAAOI,CAAAA,IAAI,CAACC,OAAL,CAAaC,QAAb,CAAsBN,aAAtB,CAAP,CACA,CAFD,IAEO,OAAO,KAAP,CACP,CAJiB,CAAlB,CAKA;AACA,GAAMO,CAAAA,SAAS,CAAGL,SAAS,CAACC,MAAV,CAAiB,SAAAC,IAAI,CAAI,CAC1C,GAAIH,cAAc,GAAK,KAAvB,CAA8B,CAC7B,MAAOG,CAAAA,IAAI,CAACI,QAAL,CAAcF,QAAd,CAAuBL,cAAvB,CAAP,CACA,CAFD,IAEO,OAAO,KAAP,CACP,CACA,CALiB,CAAlB,CAMA;AACA,GAAMQ,CAAAA,mBAAmB,CAAGF,SAAS,CAACJ,MAAV,CAAiB,SAAAC,IAAI,CAAI,IAC5CM,CAAAA,IAD4C,CACnCN,IADmC,CAC5CM,IAD4C,CAEpD,GAAIC,CAAAA,UAAU,CAAGd,MAAM,CAACe,WAAP,EAAjB,CACA,GAAIC,CAAAA,aAAa,CAAGH,IAAI,CAACE,WAAL,EAApB,CACA,MAAOC,CAAAA,aAAa,CAACP,QAAd,CAAuBK,UAAvB,CAAP,CACA,CAL2B,CAA5B,CAOA,MACC,gCACC,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,QAAxC,CAAiD,UAAU,CAAC,QAA5D,EACGF,mBAAmB,CAACK,MAApB,GAA+B,CAAhC,CAAoC,0BAAI,KAAK,CAAE,CAACC,SAAS,CAAC,MAAX,CAAX,4CAApC,CAAgHN,mBAAmB,CAACO,GAApB,CAAwB,SAAAZ,IAAI,CAAI,CAChJ,MAAO,qBAAC,SAAD,EAAW,GAAG,CAAEA,IAAI,CAACa,GAArB,CAA0B,IAAI,CAAEb,IAAhC,EAAP,CACA,CAFgH,CADlH,CADD,CADD,CASA,CA3CD,CA4CA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport LakeCards from \"./LakeCards\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { fetchLakes } from \"../actions/lakeActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Home = () => {\r\n\tconst dispatch = useDispatch();\r\n\tuseEffect(() => {\r\n\t\tfetchLakes(dispatch);\r\n\t}, [dispatch]);\r\n\tconst lakes = useSelector(state => state.lakeReducer.lakes);\r\n\tconst search = useSelector(state => state.searchBarReducer.searchParams);\r\n\tconst speciesFilter = useSelector(\r\n\t\tstate => state.searchBarReducer.speciesFilter\r\n\t);\r\n\tconst locationFilter = useSelector(\r\n\t\tstate => state.searchBarReducer.locationFilter\r\n\t);\r\n\t// species filter\r\n\tconst filterOne = lakes.filter(lake => {\r\n\t\tif (speciesFilter !== \"all\") {\r\n\t\t\treturn lake.species.includes(speciesFilter);\r\n\t\t} else return true;\r\n\t});\r\n\t// second layer filter for location\r\n\tconst filterTwo = filterOne.filter(lake => {\r\n\t\tif (locationFilter !== \"all\") {\r\n\t\t\treturn lake.locality.includes(locationFilter);\r\n\t\t} else return true;\r\n\t\t;\r\n\t});\r\n\t//third layer filter by\r\n\tconst searchFilteredCards = filterTwo.filter(lake => {\r\n\t\tconst { name } = lake;\r\n\t\tlet searchTerm = search.toLowerCase();\r\n\t\tlet lowerCaseName = name.toLowerCase();\r\n\t\treturn lowerCaseName.includes(searchTerm);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n\t\t\t\t{(searchFilteredCards.length === 0)? <h1 style={{marginTop:'5rem'}}>Nothing Found for Those Search Criteria</h1>:searchFilteredCards.map(lake => {\r\n\t\t\t\t\treturn <LakeCards key={lake._id} lake={lake} />;\r\n\t\t\t\t})}\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}