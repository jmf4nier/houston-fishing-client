{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{FETCH_LAKES,CURRENT_LAKE,FAVORITED_LAKE}from\"../actions/types\";var initialState={lakes:[],currentLake:{},favoritedLakes:[]};export default function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_LAKES:return _objectSpread({},state,{lakes:action.payload});case CURRENT_LAKE:return _objectSpread({},state,{currentLake:action.payload});case FAVORITED_LAKE:// I think i understand this now. you are assigning a value, in this case a lake name, a value of true if it isnt already in the object.  if its in the object such as\n// flags ={'buffalo run': true} it will return false to the filter and filter said lake out.\nvar newState=[].concat(_toConsumableArray(state.favoritedLakes),[action.payload]);var flags={};var newLakes=newState.filter(function(lake){if(flags[lake.name]){return false;}flags[lake.name]=true;return true;});return _objectSpread({},state,{favoritedLakes:newLakes});default:return state;}}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/reducers/lakeReducer.js"],"names":["FETCH_LAKES","CURRENT_LAKE","FAVORITED_LAKE","initialState","lakes","currentLake","favoritedLakes","state","action","type","payload","newState","flags","newLakes","filter","lake","name"],"mappings":"2XAAA,OAASA,WAAT,CAAsBC,YAAtB,CAAoCC,cAApC,KAA0D,kBAA1D,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACpBC,KAAK,CAAE,EADa,CAEpBC,WAAW,CAAE,EAFO,CAGpBC,cAAc,CAAE,EAHI,CAArB,CAMA,cAAe,WAAuC,IAA9BC,CAAAA,KAA8B,2DAAtBJ,YAAsB,IAARK,CAAAA,MAAQ,2CACrD,OAAQA,MAAM,CAACC,IAAf,EACC,IAAKT,CAAAA,WAAL,CACC,wBACIO,KADJ,EAECH,KAAK,CAAEI,MAAM,CAACE,OAFf,GAID,IAAKT,CAAAA,YAAL,CACC,wBACIM,KADJ,EAECF,WAAW,CAAEG,MAAM,CAACE,OAFrB,GAID,IAAKR,CAAAA,cAAL,CACC;AAEA;AACA,GAAMS,CAAAA,QAAQ,8BAAOJ,KAAK,CAACD,cAAb,GAA6BE,MAAM,CAACE,OAApC,EAAd,CACA,GAAME,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMC,CAAAA,QAAQ,CAAGF,QAAQ,CAACG,MAAT,CAAgB,SAASC,IAAT,CAAe,CAC/C,GAAIH,KAAK,CAACG,IAAI,CAACC,IAAN,CAAT,CAAsB,CACrB,MAAO,MAAP,CACA,CACDJ,KAAK,CAACG,IAAI,CAACC,IAAN,CAAL,CAAmB,IAAnB,CACA,MAAO,KAAP,CACA,CANgB,CAAjB,CAQA,wBACIT,KADJ,EAECD,cAAc,CAAEO,QAFjB,GAID,QACC,MAAON,CAAAA,KAAP,CA9BF,CAgCA","sourcesContent":["import { FETCH_LAKES, CURRENT_LAKE, FAVORITED_LAKE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n\tlakes: [],\r\n\tcurrentLake: {},\r\n\tfavoritedLakes: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_LAKES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlakes: action.payload\r\n\t\t\t};\r\n\t\tcase CURRENT_LAKE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentLake: action.payload\r\n\t\t\t};\r\n\t\tcase FAVORITED_LAKE:\r\n\t\t\t// I think i understand this now. you are assigning a value, in this case a lake name, a value of true if it isnt already in the object.  if its in the object such as\r\n\r\n\t\t\t// flags ={'buffalo run': true} it will return false to the filter and filter said lake out.\r\n\t\t\tconst newState = [...state.favoritedLakes, action.payload];\r\n\t\t\tconst flags = {};\r\n\t\t\tconst newLakes = newState.filter(function(lake) {\r\n\t\t\t\tif (flags[lake.name]) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tflags[lake.name] = true;\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfavoritedLakes: newLakes\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}