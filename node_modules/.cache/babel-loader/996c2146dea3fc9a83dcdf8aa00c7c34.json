{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\googleMaps\\\\googleMaps.js\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport React from \"react\";\nimport history from \"../../history\";\nimport ReactDOM from \"react-dom\";\n\nclass MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      selectedCoordinates: {},\n      selectedLake: {}\n    };\n\n    this.onMarkerClick = lake => {\n      const lakeCoordinates = lake.coordinates;\n      this.setState({\n        selectedCoordinates: lakeCoordinates,\n        selectedLake: lake,\n        showingInfoWindow: !this.state.showingInfoWindow\n      });\n    };\n\n    this.displayMarkers = () => {\n      return this.props.lakes.map((lake, index) => {\n        return React.createElement(Marker, {\n          onClick: e => this.onMarkerClick(lake, e),\n          key: index,\n          id: index,\n          text: \"lake marker\",\n          position: {\n            lat: lake.coordinates.lat,\n            lng: lake.coordinates.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.onClose = () => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          selectedPlace: {}\n        });\n      }\n    };\n  }\n\n  onInfoWindowOpen() {\n    const link = React.createElement(\"button\", {\n      style: {\n        background: \" none!important\",\n        border: \"none\",\n        padding: \"0!important\",\n        fontFamily: \"arial, sans-serif\",\n        color: \"#069\",\n        textDecoration: \"underline\",\n        cursor: \"pointer\"\n      },\n      onClick: () => this.props.handleMarkerChoice(this.state.selectedLake),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.state.selectedLake.name);\n    ReactDOM.render(React.Children.only(link), document.getElementById(\"name-link\"));\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 11,\n      style: {\n        width: \"90%\",\n        height: \"700px\",\n        marginRight: \"0%\",\n        marginLeft: \"-45%\",\n        borderRadius: \"1%\",\n        opacity: \".9\"\n      },\n      initialCenter: {\n        lat: 29.7604,\n        lng: -95.3698\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.displayMarkers(), React.createElement(InfoWindow, {\n      position: this.state.selectedCoordinates,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      onOpen: e => {\n        this.onInfoWindowOpen();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.selectedLake.description)));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBDIzsWrPiktdWsGZ4f0EM4FLMHVslvki0\"\n})(MapContainer);","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\Coding\\fishing_app_houston\\Client\\src\\components\\googleMaps\\googleMaps.js"],"names":["Map","GoogleApiWrapper","Marker","InfoWindow","React","history","ReactDOM","MapContainer","Component","state","showingInfoWindow","selectedCoordinates","selectedLake","onMarkerClick","lake","lakeCoordinates","coordinates","setState","displayMarkers","props","lakes","map","index","e","lat","lng","onClose","selectedPlace","onInfoWindowOpen","link","background","border","padding","fontFamily","color","textDecoration","cursor","handleMarkerChoice","name","render","Children","only","document","getElementById","google","width","height","marginRight","marginLeft","borderRadius","opacity","description","apiKey"],"mappings":"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","sourcesContent":["import { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport React from \"react\";\r\nimport history from \"../../history\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass MapContainer extends React.Component {\r\n  state = {\r\n    showingInfoWindow: false,\r\n    selectedCoordinates: {},\r\n    selectedLake: {}\r\n  };\r\n\r\n  onMarkerClick = lake => {\r\n    const lakeCoordinates = lake.coordinates;\r\n    this.setState({\r\n      selectedCoordinates: lakeCoordinates,\r\n      selectedLake: lake,\r\n      showingInfoWindow: !this.state.showingInfoWindow\r\n    });\r\n  };\r\n\r\n  displayMarkers = () => {\r\n    return this.props.lakes.map((lake, index) => {\r\n      return (\r\n        <Marker\r\n          onClick={e => this.onMarkerClick(lake, e)}\r\n          key={index}\r\n          id={index}\r\n          text=\"lake marker\"\r\n          position={{\r\n            lat: lake.coordinates.lat,\r\n            lng: lake.coordinates.lng\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  onInfoWindowOpen() {\r\n    const link = (\r\n      <button\r\n        style={{\r\n          background: \" none!important\",\r\n          border: \"none\",\r\n          padding: \"0!important\",\r\n          fontFamily: \"arial, sans-serif\",\r\n          color: \"#069\",\r\n          textDecoration: \"underline\",\r\n          cursor: \"pointer\"\r\n        }}\r\n        onClick={() => this.props.handleMarkerChoice(this.state.selectedLake)}\r\n      >\r\n        {this.state.selectedLake.name}\r\n      </button>\r\n    );\r\n    ReactDOM.render(\r\n      React.Children.only(link),\r\n      document.getElementById(\"name-link\")\r\n    );\r\n  }\r\n  onClose = () => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        selectedPlace: {}\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={11}\r\n        style={{\r\n          width: \"90%\",\r\n          height: \"700px\",\r\n          marginRight: \"0%\",\r\n          marginLeft: \"-45%\",\r\n          borderRadius: \"1%\",\r\n          opacity: \".9\"\r\n        }}\r\n        initialCenter={{ lat: 29.7604, lng: -95.3698 }}\r\n      >\r\n        {this.displayMarkers()}\r\n        <InfoWindow\r\n          position={this.state.selectedCoordinates}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n          onOpen={e => {\r\n            this.onInfoWindowOpen();\r\n          }}\r\n        >\r\n          {/* <h4 id=\"name-link\"></h4> */}\r\n          <p>{this.state.selectedLake.description}</p>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBDIzsWrPiktdWsGZ4f0EM4FLMHVslvki0\"\r\n})(MapContainer);\r\n"]},"metadata":{},"sourceType":"module"}