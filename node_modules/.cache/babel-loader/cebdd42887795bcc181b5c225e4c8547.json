{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\src\\\\components\\\\lakes\\\\LakeCards.js\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport history from \"../../utils/History\"; // import clsx from \"clsx\";\n\nimport Card from \"@material-ui/core/Card\"; // import CardHeader from \"@material-ui/core/CardHeader\";\n\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\"; // import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { currentLake, favoritedLakes } from \"../actions/lakeActions\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \".75%\",\n    maxWidth: 345,\n    height: \"45vh\" //view height to normalize size across all cards\n\n  },\n  shareIcon: {\n    color: \"blue\"\n  },\n  heartIcon: {\n    color: red[500] //material ui color on scale of 0-1000.imported\n    //future implement active, inactive\n\n  },\n  link: {\n    fontSize: \"2vh\" //responsive\n\n  },\n  media: {\n    height: \"25vh\",\n    //attempt at responsiveness\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nexport default function LakeCard(props) {\n  const lake = props.lake;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleFavorite = () => {\n    favoritedLakes(dispatch, lake);\n  };\n\n  console.log;\n\n  const handleSelection = () => {\n    currentLake(dispatch, lake);\n    history.push(\"/lake\");\n  };\n\n  return React.createElement(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    onClick: () => handleSelection(),\n    className: classes.media,\n    image: lake.images[0],\n    title: lake.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, lake.description.slice(0, 200) + \" \", React.createElement(Link, {\n    className: classes.link,\n    href: \"#\",\n    title: \"Learn More\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"...\"))), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    className: classes.heartIcon,\n    \"aria-label\": \"add to favorites\",\n    title: \"add to favorites\",\n    disabled: false,\n    onClick: () => handleFavorite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    className: classes.shareIcon,\n    \"aria-label\": \"share\",\n    title: \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/lakes/LakeCards.js"],"names":["React","useDispatch","makeStyles","history","Card","CardMedia","CardContent","CardActions","IconButton","Typography","red","FavoriteIcon","ShareIcon","Link","currentLake","favoritedLakes","useStyles","theme","root","margin","maxWidth","height","shareIcon","color","heartIcon","link","fontSize","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","LakeCard","props","lake","classes","dispatch","handleFavorite","console","log","handleSelection","push","images","name","description","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport history from \"../../utils/History\";\r\n// import clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\n// import CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\n// import ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { currentLake, favoritedLakes } from \"../actions/lakeActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: \".75%\",\r\n\t\tmaxWidth: 345,\r\n\t\theight: \"45vh\" //view height to normalize size across all cards\r\n\t},\r\n\tshareIcon: {\r\n\t\tcolor: \"blue\"\r\n\t},\r\n\theartIcon: {\r\n\t\tcolor: red[500] //material ui color on scale of 0-1000.imported\r\n\t\t//future implement active, inactive\r\n\t},\r\n\tlink: {\r\n\t\tfontSize: \"2vh\" //responsive\r\n\t},\r\n\tmedia: {\r\n\t\theight: \"25vh\", //attempt at responsiveness\r\n\t\tpaddingTop: \"56.25%\" // 16:9\r\n\t},\r\n\texpand: {\r\n\t\ttransform: \"rotate(0deg)\",\r\n\t\tmarginLeft: \"auto\",\r\n\t\ttransition: theme.transitions.create(\"transform\", {\r\n\t\t\tduration: theme.transitions.duration.shortest\r\n\t\t})\r\n\t},\r\n\texpandOpen: {\r\n\t\ttransform: \"rotate(180deg)\"\r\n\t},\r\n\tavatar: {\r\n\t\tbackgroundColor: red[500]\r\n\t}\r\n}));\r\n\r\nexport default function LakeCard(props) {\r\n\tconst { lake } = props;\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch()\r\n\tconst handleFavorite = ()=>{\r\n\t\tfavoritedLakes(dispatch, lake)\r\n\t}\r\n\tconsole.log\r\n\tconst handleSelection = () => {\r\n\t\tcurrentLake(dispatch, lake);\r\n\t\thistory.push(\"/lake\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={classes.root}>\r\n\t\t\t{/* //for getting the mouse over link effect */}\r\n\t\t\t<a href=\"\">\r\n\t\t\t\t<CardMedia\r\n\t\t\t\t\tonClick={() => handleSelection()}\r\n\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\timage={lake.images[0]}\r\n\t\t\t\t\ttitle={lake.name}\r\n\t\t\t\t/>\r\n\t\t\t</a>\r\n\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n\t\t\t\t\t{lake.description.slice(0, 200) + \" \"}\r\n\t\t\t\t\t<Link className={classes.link} href={\"#\"} title=\"Learn More\">\r\n\t\t\t\t\t\t...\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions disableSpacing>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tclassName={classes.heartIcon}\r\n\t\t\t\t\taria-label=\"add to favorites\"\r\n\t\t\t\t\ttitle=\"add to favorites\"\r\n\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\tonClick={()=>handleFavorite} \r\n\t\t\t\t>\r\n\t\t\t\t\t<FavoriteIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tclassName={classes.shareIcon}\r\n\t\t\t\t\taria-label=\"share\"\r\n\t\t\t\t\ttitle=\"share\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<ShareIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}