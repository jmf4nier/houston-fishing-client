{"ast":null,"code":"import { POST_USER, LOGIN_USER, SHOW_LOGIN, SHOW_SIGNUP, LOGOUT_USER } from \"./types\";\nexport const postUser = data => async dispatch => {\n  console.log(data);\n  let res = await fetch(\"https://jasonserverhoustonfishing.herokuapp.com/users/signup\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: data.password,\n      username: data.username,\n      email: data.email\n    })\n  });\n  let result = await res.json();\n  dispatch({\n    type: POST_USER,\n    payload: result\n  });\n};\nexport const loginUser = data => async dispatch => {\n  console.log(data);\n  let res = await fetch(\"https://jasonserverhoustonfishing.herokuapp.com/users/login\", {\n    method: \"POST\",\n    headers: {\n      accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password: data.password,\n      email: data.email\n    })\n  });\n  let result = await res.json();\n  window.localStorage.setItem(\"token\", result.token);\n  dispatch({\n    type: LOGIN_USER,\n    payload: result\n  }); // .then(res => res.json())\n  // .then(result => {\n  //     window.localStorage.setItem('token', result.token)\n  //     dispatch({\n  //         type: LOGIN_USER,\n  //         payload: result\n  //     })\n  // })\n};\nexport const logoutUser = () => dispatch => {\n  dispatch({\n    type: LOGOUT_USER,\n    payload: \"\"\n  });\n};\nexport const showLogin = state => dispatch => {\n  console.log(state);\n  dispatch({\n    type: SHOW_LOGIN,\n    payload: state\n  });\n};\nexport const showSignup = state => dispatch => {\n  console.log(state);\n  dispatch({\n    type: SHOW_SIGNUP,\n    payload: state\n  });\n};","map":{"version":3,"sources":["C:\\Users\\Jason\\Desktop\\Coding\\fishing_app_houston\\Client\\src\\components\\actions\\userActions.js"],"names":["POST_USER","LOGIN_USER","SHOW_LOGIN","SHOW_SIGNUP","LOGOUT_USER","postUser","data","dispatch","console","log","res","fetch","method","headers","accept","body","JSON","stringify","password","username","email","result","json","type","payload","loginUser","window","localStorage","setItem","token","logoutUser","showLogin","state","showSignup"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,WALF,QAMO,SANP;AAQA,OAAO,MAAMC,QAAQ,GAAGC,IAAI,IAAI,MAAMC,QAAN,IAAkB;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,GAAG,GAAG,MAAMC,KAAK,CAAC,8DAAD,EAAiE;AACpFC,IAAAA,MAAM,EAAE,MAD4E;AAEpFC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAF2E;AAMpFC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,QAAQ,EAAEZ,IAAI,CAACY,QADI;AAEnBC,MAAAA,QAAQ,EAAEb,IAAI,CAACa,QAFI;AAGnBC,MAAAA,KAAK,EAAEd,IAAI,CAACc;AAHO,KAAf;AAN8E,GAAjE,CAArB;AAYA,MAAIC,MAAM,GAAG,MAAMX,GAAG,CAACY,IAAJ,EAAnB;AACAf,EAAAA,QAAQ,CAAC;AACPgB,IAAAA,IAAI,EAAEvB,SADC;AAEPwB,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAID,CAnBM;AAoBP,OAAO,MAAMI,SAAS,GAAGnB,IAAI,IAAI,MAAMC,QAAN,IAAkB;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAII,GAAG,GAAG,MAAMC,KAAK,CAAC,6DAAD,EAAgE;AACnFC,IAAAA,MAAM,EAAE,MAD2E;AAEnFC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAF0E;AAMnFC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,QAAQ,EAAEZ,IAAI,CAACY,QADI;AAEnBE,MAAAA,KAAK,EAAEd,IAAI,CAACc;AAFO,KAAf;AAN6E,GAAhE,CAArB;AAWA,MAAIC,MAAM,GAAG,MAAMX,GAAG,CAACY,IAAJ,EAAnB;AACAI,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCP,MAAM,CAACQ,KAA5C;AACAtB,EAAAA,QAAQ,CAAC;AACPgB,IAAAA,IAAI,EAAEtB,UADC;AAEPuB,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR,CAfiD,CAmBjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA3BM;AA4BP,OAAO,MAAMS,UAAU,GAAG,MAAMvB,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAAC;AACPgB,IAAAA,IAAI,EAAEnB,WADC;AAEPoB,IAAAA,OAAO,EAAE;AAFF,GAAD,CAAR;AAID,CALM;AAMP,OAAO,MAAMO,SAAS,GAAGC,KAAK,IAAIzB,QAAQ,IAAI;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACAzB,EAAAA,QAAQ,CAAC;AACPgB,IAAAA,IAAI,EAAErB,UADC;AAEPsB,IAAAA,OAAO,EAAEQ;AAFF,GAAD,CAAR;AAID,CANM;AAOP,OAAO,MAAMC,UAAU,GAAGD,KAAK,IAAIzB,QAAQ,IAAI;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACAzB,EAAAA,QAAQ,CAAC;AACPgB,IAAAA,IAAI,EAAEpB,WADC;AAEPqB,IAAAA,OAAO,EAAEQ;AAFF,GAAD,CAAR;AAID,CANM","sourcesContent":["import {\r\n  POST_USER,\r\n  LOGIN_USER,\r\n  SHOW_LOGIN,\r\n  SHOW_SIGNUP,\r\n  LOGOUT_USER\r\n} from \"./types\";\r\n\r\nexport const postUser = data => async dispatch => {\r\n  console.log(data);\r\n  let res = await fetch(\"https://jasonserverhoustonfishing.herokuapp.com/users/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      password: data.password,\r\n      username: data.username,\r\n      email: data.email\r\n    })\r\n  });\r\n  let result = await res.json();\r\n  dispatch({\r\n    type: POST_USER,\r\n    payload: result\r\n  });\r\n};\r\nexport const loginUser = data => async dispatch => {\r\n  console.log(data);\r\n  let res = await fetch(\"https://jasonserverhoustonfishing.herokuapp.com/users/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      password: data.password,\r\n      email: data.email\r\n    })\r\n  });\r\n  let result = await res.json();\r\n  window.localStorage.setItem(\"token\", result.token);\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: result\r\n  });\r\n  // .then(res => res.json())\r\n  // .then(result => {\r\n  //     window.localStorage.setItem('token', result.token)\r\n  //     dispatch({\r\n  //         type: LOGIN_USER,\r\n  //         payload: result\r\n  //     })\r\n  // })\r\n};\r\nexport const logoutUser = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n    payload: \"\"\r\n  });\r\n};\r\nexport const showLogin = state => dispatch => {\r\n  console.log(state);\r\n  dispatch({\r\n    type: SHOW_LOGIN,\r\n    payload: state\r\n  });\r\n};\r\nexport const showSignup = state => dispatch => {\r\n  console.log(state);\r\n  dispatch({\r\n    type: SHOW_SIGNUP,\r\n    payload: state\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}