{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Jason\\\\Desktop\\\\Coding\\\\fishing_app_houston\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import CircularProgress from'@material-ui/core/CircularProgress';var useStyles=makeStyles(function(theme){return{root:{display:'flex','& > * + *':{marginLeft:theme.spacing(2)}}};});export default function LoadingIcon(){var classes=useStyles();var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),progress=_React$useState2[0],setProgress=_React$useState2[1];React.useEffect(function(){function tick(){// reset when reaching 100%\nsetProgress(function(oldProgress){return oldProgress>=100?0:oldProgress+1;});}var timer=setInterval(tick,20);return function(){clearInterval(timer);};},[]);return React.createElement(\"div\",{className:classes.root},React.createElement(CircularProgress,{size:\"10rem\",variant:\"determinate\",value:progress}));}","map":{"version":3,"sources":["C:/Users/Jason/Desktop/Coding/fishing_app_houston/Client/src/components/material_ui_components/LoadingIcon.js"],"names":["React","makeStyles","CircularProgress","useStyles","theme","root","display","marginLeft","spacing","LoadingIcon","classes","useState","progress","setProgress","useEffect","tick","oldProgress","timer","setInterval","clearInterval"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAAAG,KAAK,QAAK,CACrCC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJ,YAAa,CACXC,UAAU,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADD,CAFT,CAD+B,CAAL,EAAN,CAA5B,CASA,cAAe,SAASC,CAAAA,WAAT,EAAuB,CACpC,GAAMC,CAAAA,OAAO,CAAGP,SAAS,EAAzB,CADoC,oBAEJH,KAAK,CAACW,QAAN,CAAe,CAAf,CAFI,oDAE7BC,QAF6B,qBAEnBC,WAFmB,qBAIpCb,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpB,QAASC,CAAAA,IAAT,EAAgB,CACd;AACAF,WAAW,CAAC,SAAAG,WAAW,QAAKA,CAAAA,WAAW,EAAI,GAAf,CAAqB,CAArB,CAAyBA,WAAW,CAAG,CAA5C,EAAZ,CAAX,CACD,CAED,GAAMC,CAAAA,KAAK,CAAGC,WAAW,CAACH,IAAD,CAAO,EAAP,CAAzB,CACA,MAAO,WAAM,CACXI,aAAa,CAACF,KAAD,CAAb,CACD,CAFD,CAGD,CAVD,CAUG,EAVH,EAYA,MACE,4BAAK,SAAS,CAAEP,OAAO,CAACL,IAAxB,EACE,oBAAC,gBAAD,EAAkB,IAAI,CAAC,OAAvB,CAA+B,OAAO,CAAC,aAAvC,CAAqD,KAAK,CAAEO,QAA5D,EADF,CADF,CAMD","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LoadingIcon() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size='10rem' variant=\"determinate\" value={progress} />\r\n     \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}