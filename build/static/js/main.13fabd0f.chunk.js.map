{"version":3,"sources":["components/actions/lakeActions.js","components/actions/types.js","components/lakes/lakeCards.js","components/actions/userActions.js","components/messages/messages.js","components/actions/messageActions.js","components/lakes/pictureGallery.js","components/lakes/lakeShow.js","components/googleMaps/googleMaps.js","components/navBar/clickOutside.js","components/navBar/navBar.js","components/lakes/lakeIndex.js","components/userForms/login.js","components/userForms/signUp.js","App.js","serviceWorker.js","components/reducers/lakeReducer.js","components/reducers/messageReducer.js","components/reducers/userReducer.js","components/reducers/index.js","store.js","index.js"],"names":["currentLake","lake","dispatch","type","payload","LakeCard","state","showLake","_this2","this","lakes","props","map","react_default","a","createElement","Card","style","margin","onClick","handleClick","key","_id","src","images","height","width","alt","Content","Header","name","Meta","className","locality","Description","species","join","extra","Grid","marginLeft","marginRight","Row","i","flex","React","Component","connect","lakeReducer","showLogin","console","log","showSignup","Messages","reply","message","isReply","idChosen","keyChosen","handleChange","event","content","target","value","_this","setState","imageFile","handleReplies","indexOfReply","idOfMessage","handleReplySubmit","data","message_id","author","date","Date","patchMessage","capitalizeUsername","undefined","charAt","toUpperCase","slice","handleCommentSubmit","currentUser","username","messageContent","lake_id","replies","postMessage","fetchMessages","token","window","localStorage","getItem","commentField","Form","onSubmit","TextArea","onChange","Button","labelPosition","icon","primary","replyField","messages","index","Comment","textAlign","fontSize","Avatar","Author","Metadata","Text","Actions","Action","color","opacity","length","Group","backgroundColor","as","dividing","cursor","scrollTo","messageReducer","userReducer","id","url","URL","params","search","URLSearchParams","fetch","then","res","json","result","method","headers","accept","Content-Type","body","JSON","stringify","PictureGallery","lake_pics","lakePics","pic","push","original","concat","thumbnail","image_gallery_default","originalClass","thumbnailClass","thumbnailPosition","showBullets","items","LakeShow","_this$props$lake","description","water_quality","size_in_acres","public_access","license_required","operating_organization","columns","centered","container","marginTop","pictureGallery_PictureGallery","fontFamily","borderStyle","padding","marginBottom","borderWidth","borderRadius","Table","celled","HeaderCell","Body","Cell","messages_messages","MapContainer","showingInfoWindow","selectedCoordinates","selectedLake","onMarkerClick","lakeCoordinates","coordinates","displayMarkers","dist","e","text","position","lat","lng","onClose","selectedPlace","link","background","border","textDecoration","handleMarkerChoice","ReactDOM","render","Children","only","document","getElementById","_this3","google","zoom","initialCenter","visible","onOpen","onInfoWindowOpen","GoogleApiWrapper","apiKey","ClickOutside","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handle","isTouch","onClickOutside","el","contains","getContainer","bind","assertThisInitialized","ref","_this$props","children","objectWithoutProperties","assign","addEventListener","removeEventListener","NavBar","expanded","handleLogout","removeItem","logoutUser","handleLoginClick","_callee","regenerator_default","wrap","_context","prev","next","stop","clickOutside_ClickOutside","lib_default","onSelect","selected","defaultExpanded","onMouseOver","onMouseOut","Nav","lib","eventKey","LakeIndex","mapview","showView","handleMapView","handleShowView","handleShowAll","header","Container","right","top","headerWithName","display","user","textShadow","lakeGrid","size","googleMaps","lakeCards","navBar","lakeShow","Login","password","email","loggedIn","error","handleShowSignupClick","handleCancelClick","handleSubmit","_callee2","capitalizedName","_context2","loginUser","alert","reset","info","widths","Input","fluid","label","placeholder","tabIndex","_ref2","asyncToGenerator","mark","sent","setItem","_x2","apply","arguments","SignUp","postUser","_ref","_x","App","fetchLakes","login","signUp","lakeIndex","Boolean","location","hostname","match","initialState","combineReducers","action","objectSpread","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13fabd0f.chunk.js","sourcesContent":["import { FETCH_LAKES } from \"./types\";\r\nimport { CURRENT_LAKE } from \"./types\";\r\n\r\nexport const fetchLakes = () => dispatch => {\r\n  fetch(\"http://jasonserverhoustonfishing.herokuapp.com/lakes/\")\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: FETCH_LAKES,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\nexport const currentLake = lake => dispatch => {\r\n  dispatch({\r\n    type: CURRENT_LAKE,\r\n    payload: lake\r\n  });\r\n};\r\n","export const FETCH_LAKES = \"FETCH_LAKES\";\r\nexport const CURRENT_LAKE = \"CURRENT_LAKE\";\r\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\";\r\nexport const POST_MESSAGE = \"POST_MESSAGE\";\r\nexport const PATCH_MESSAGE = \"PATCH_MESSAGE\";\r\nexport const POST_USER = \"POST_USER\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const SHOW_LOGIN = \"SHOW_LOGIN\";\r\nexport const SHOW_SIGNUP = \"SHOW_SIGNUP\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { currentLake } from \"../actions/lakeActions\";\r\nimport { Grid, Card } from \"semantic-ui-react\";\r\n\r\nclass LakeCard extends React.Component {\r\n  state = {\r\n    showLake: false\r\n  };\r\n  componentDidMount() {}\r\n  // handleClick = (lake) =>{\r\n  //     this.props.currentLake(lake)\r\n  //     this.props.handleShowView()\r\n  // }\r\n\r\n  render() {\r\n    const lakes = this.props.lakes.map(lake => (\r\n      <Card\r\n        style={{ margin: \"1em\" }}\r\n        onClick={() => this.props.handleClick(lake)}\r\n        key={lake._id}\r\n      >\r\n        <img src={lake.images[0]} height=\"200px\" width=\"auto\" alt=\"lake\" />\r\n        <Card.Content>\r\n          <Card.Header>{lake.name}</Card.Header>\r\n          <Card.Meta>\r\n            <span className=\"city\">{lake.locality}</span>\r\n          </Card.Meta>\r\n          <Card.Description>{lake.species.join(\", \")}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra></Card.Content>\r\n      </Card>\r\n    ));\r\n\r\n    return (\r\n      <Grid style={{ marginLeft: \"1%\", marginRight: \"1%\" }}>\r\n        <Grid.Row>\r\n          {lakes.map((lake, i) => (\r\n            <div key={i} style={{ flex: \"25\" }}> {lake}</div>\r\n          ))}\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lakes: state.lakeReducer.lakes\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { currentLake }\r\n)(LakeCard);\r\n","import {\r\n  POST_USER,\r\n  LOGIN_USER,\r\n  SHOW_LOGIN,\r\n  SHOW_SIGNUP,\r\n  LOGOUT_USER\r\n} from \"./types\";\r\n\r\nexport const postUser = data => async dispatch => {\r\n  console.log(data);\r\n  let res = await fetch(\"http://jasonserverhoustonfishing.herokuapp.com/users/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      password: data.password,\r\n      username: data.username,\r\n      email: data.email\r\n    })\r\n  });\r\n  let result = await res.json();\r\n  dispatch({\r\n    type: POST_USER,\r\n    payload: result\r\n  });\r\n};\r\nexport const loginUser = data => async dispatch => {\r\n  console.log(data);\r\n  let res = await fetch(\"jasonserverhoustonfishing.herokuapp.com/users/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      password: data.password,\r\n      email: data.email\r\n    })\r\n  });\r\n  let result = await res.json();\r\n  window.localStorage.setItem(\"token\", result.token);\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: result\r\n  });\r\n  // .then(res => res.json())\r\n  // .then(result => {\r\n  //     window.localStorage.setItem('token', result.token)\r\n  //     dispatch({\r\n  //         type: LOGIN_USER,\r\n  //         payload: result\r\n  //     })\r\n  // })\r\n};\r\nexport const logoutUser = () => dispatch => {\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n    payload: \"\"\r\n  });\r\n};\r\nexport const showLogin = state => dispatch => {\r\n  console.log(state);\r\n  dispatch({\r\n    type: SHOW_LOGIN,\r\n    payload: state\r\n  });\r\n};\r\nexport const showSignup = state => dispatch => {\r\n  console.log(state);\r\n  dispatch({\r\n    type: SHOW_SIGNUP,\r\n    payload: state\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchMessages,\r\n  postMessage,\r\n  patchMessage\r\n} from \"../actions/messageActions\";\r\nimport { showLogin } from \"../actions/userActions\";\r\nimport { Button, Comment, Form, Header } from \"semantic-ui-react\";\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    reply: {},\r\n    message: \"\",\r\n    isReply: false,\r\n    idChosen: null,\r\n    keyChosen: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchMessages(this.props.lake._id);\r\n    //passing the current lake's id to the fetch to get only related messages\r\n  }\r\n\r\n  handleChange = event => {\r\n    const content = event.target.value;\r\n    if (event.target.name === \"comment\") {\r\n      this.setState({\r\n        message: content\r\n      });\r\n    } else if (event.target.name === \"reply\") {\r\n      this.setState({\r\n        reply: content\r\n      });\r\n    } else if (event.target.name === \"image\") {\r\n      console.log(content);\r\n      this.setState({\r\n        imageFile: content\r\n      });\r\n    }\r\n  };\r\n\r\n  handleReplies = (indexOfReply, idOfMessage) => {\r\n    this.setState({\r\n      isReply: !this.state.isReply,\r\n      keyChosen: indexOfReply,\r\n      idChosen: idOfMessage\r\n    });\r\n  };\r\n\r\n  handleReplySubmit = () => {\r\n    this.setState({\r\n      isReply: !this.state.isReply\r\n    });\r\n    const data = {\r\n      message_id: this.state.idChosen,\r\n      reply: {\r\n        author: \"me\",\r\n        content: this.state.reply,\r\n        date: new Date()\r\n      }\r\n    };\r\n    this.props.patchMessage(data);\r\n  };\r\n  capitalizeUsername = name => {\r\n    if (name !== undefined) {\r\n      return name.charAt(0).toUpperCase() + name.slice(1);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  handleCommentSubmit = event => {\r\n    const author = this.props.currentUser.username;\r\n    const messageContent = this.state.message;\r\n    const data = {\r\n      lake_id: this.props.lake._id,\r\n      replies: [],\r\n      author: author,\r\n      content: messageContent,\r\n      date: new Date()\r\n    };\r\n    this.props.postMessage(data);\r\n  };\r\n\r\n  render() {\r\n    const token = window.localStorage.getItem(\"token\");\r\n\r\n    const commentField = (\r\n      <Form reply onSubmit={() => this.handleCommentSubmit()}>\r\n        <Form.TextArea\r\n          name=\"comment\"\r\n          style={{ height: \"50px\" }}\r\n          onChange={event => this.handleChange(event)}\r\n        />\r\n        <Button\r\n          content=\"Post Comment\"\r\n          labelPosition=\"left\"\r\n          icon=\"edit\"\r\n          primary\r\n        />\r\n      </Form>\r\n    );\r\n\r\n    const replyField = (\r\n      <Form reply onSubmit={() => this.handleReplySubmit()}>\r\n        <Form.TextArea\r\n          name=\"reply\"\r\n          style={{ height: \"50px\" }}\r\n          onChange={event => this.handleChange(event)}\r\n        />\r\n        <Button content=\"Reply\" labelPosition=\"left\" icon=\"edit\" primary />\r\n      </Form>\r\n    );\r\n\r\n    const messages = this.props.messages.map((message, index) => (\r\n      <Comment key={index} style={{ textAlign: \"left\", fontSize: \"1.25vw\" }}>\r\n        <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/elliot.jpg\" />\r\n        <Comment.Content>\r\n          <Comment.Author>\r\n            {this.capitalizeUsername(message.author)}\r\n          </Comment.Author>\r\n          <Comment.Metadata>\r\n            <div>Yesterday at 12:30AM</div>\r\n          </Comment.Metadata>\r\n          <Comment.Text>\r\n            <p>{message.content}</p>\r\n          </Comment.Text>\r\n          <Comment.Actions>\r\n            {token !== null ? (\r\n              <Comment.Action\r\n                style={{ color: \"blue\", opacity: \".5\" }}\r\n                onClick={() => this.handleReplies(index, message._id)}\r\n              >\r\n                Reply\r\n              </Comment.Action>\r\n            ) : null}\r\n\r\n            {this.state.keyChosen === index && this.state.isReply ? (\r\n              <div>{replyField} </div>\r\n            ) : null}\r\n          </Comment.Actions>\r\n        </Comment.Content>\r\n\r\n        {message.replies.length > 0\r\n          ? message.replies.map((reply, index) => (\r\n              <Comment.Group key={index}>\r\n                <Comment style={{ textAlign: \"left\", fontSize: \"1.25vw\" }}>\r\n                  <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\" />\r\n                  <Comment.Content>\r\n                    <Comment.Author>\r\n                      {this.capitalizeUsername(reply.author)}\r\n                    </Comment.Author>\r\n                    <Comment.Metadata>\r\n                      <div>Just now</div>\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>{reply.content}</Comment.Text>\r\n                  </Comment.Content>\r\n                </Comment>\r\n              </Comment.Group>\r\n            ))\r\n          : null}\r\n      </Comment>\r\n    ));\r\n\r\n    return (\r\n      <Comment.Group\r\n        className=\"comment-group\"\r\n        style={{ backgroundColor: \"rgb(248, 246, 246)\" }}\r\n      >\r\n        <Header as=\"h1\" dividing style={{ fontSize: \"1.5\" }}>\r\n          {this.props.lake.name}'s Comments\r\n        </Header>\r\n        {messages}\r\n        {token !== null ? (\r\n          commentField\r\n        ) : (\r\n          <h3\r\n            style={{ cursor: \"pointer\", color: \"#069\" }}\r\n            onClick={() => {\r\n              this.props.showLogin(true);\r\n              window.scrollTo(0, 0); ////scrolls to top of window when login clicked\r\n            }}\r\n          >\r\n            Login To Comment\r\n          </h3>\r\n        )}\r\n      </Comment.Group>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  messages: state.messageReducer.messages,\r\n  lake: state.lakeReducer.currentLake,\r\n  currentUser: state.userReducer.currentUser\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchMessages, postMessage, patchMessage, showLogin }\r\n)(Messages);\r\n","import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from \"../actions/types\";\r\n\r\nexport const fetchMessages = id => dispatch => {\r\n  const url = new URL(\"http://jasonserverhoustonfishing.herokuapp.com/messages/\");\r\n  const params = { lake_id: id };\r\n  // sets the passed in lake_id to params for the request for access in the server.\r\n  url.search = new URLSearchParams(params);\r\n  fetch(url)\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: FETCH_MESSAGES,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\nexport const postMessage = data => dispatch => {\r\n  console.log(data);\r\n  fetch(\"http://jasonserverhoustonfishing.herokuapp.com/messages/add\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      lake_id: data.lake_id,\r\n      replies: data.replies,\r\n      author: data.author,\r\n      content: data.content,\r\n      date: data.date\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: POST_MESSAGE,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\nexport const patchMessage = data => dispatch => {\r\n  console.log(data);\r\n  fetch(\"http://jasonserverhoustonfishing.herokuapp.com/messages/update/\" + data.message_id, {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      reply: data.reply\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n    .then(result =>\r\n      dispatch({\r\n        type: PATCH_MESSAGE,\r\n        payload: result\r\n      })\r\n    );\r\n};\r\n","import ImageGallery from \"react-image-gallery\";\r\nimport React from \"react\";\r\n\r\nexport default class PictureGallery extends React.Component {\r\n  render() {\r\n    const lake_pics = this.props.lakePics;\r\n    const images = [];\r\n    lake_pics.map(pic =>\r\n      images.push({\r\n        original: `${pic}`,\r\n        thumbnail: `${pic}`\r\n      })\r\n    );\r\n\r\n    return (\r\n      <ImageGallery\r\n        style={{ width: \"100%\" }}\r\n        originalClass=\"featured-slide\"\r\n        thumbnailClass=\"featured-thumb\"\r\n        thumbnailPosition=\"left\"\r\n        showBullets={true}\r\n        items={images}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { Link } from 'react-router-dom'\r\nimport Messages from \"../messages/messages\";\r\nimport { Grid, Table, Button } from \"semantic-ui-react\";\r\nimport PictureGallery from \"./pictureGallery\";\r\n\r\nclass LakeShow extends React.Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            locality,\r\n            description,\r\n            species,\r\n            water_quality,\r\n            size_in_acres,\r\n            public_access,\r\n            license_required,\r\n            operating_organization\r\n        } = this.props.lake;\r\n\r\n        return (\r\n            <Grid\r\n                columns=\"1\"\r\n                centered={true}\r\n                container={true}\r\n                style={{ marginLeft: \"5%\", marginRight: \"1%\" }}\r\n            >\r\n                <Button\r\n                    onClick={() => this.props.handleClick()}\r\n                    style={{ marginLeft: \"3%\", marginTop: \"3%\" }}\r\n                >\r\n                    Return to main menu\r\n                </Button>\r\n                <Grid.Row>\r\n                    <h1 id=\"showpage-title\">{name}</h1>\r\n                </Grid.Row>\r\n                <Grid.Row id=\"gallery-div\">\r\n                    <PictureGallery lakePics={this.props.lake.images} />\r\n                </Grid.Row>\r\n                <Grid.Row\r\n                    style={{\r\n                        fontFamily: \"Times New Roman\",\r\n                        borderStyle: \"ridge\",\r\n                        padding: \"2%\",\r\n                        textAlign: \"left\",\r\n                        marginTop: \"3%\",\r\n                        marginBottom: \"3%\",\r\n                        fontSize: \"1.25vw\",\r\n                        borderWidth: \"5px\",\r\n                        borderRadius: \"2%\",\r\n                        backgroundColor: \"rgb(248, 246, 246\",\r\n                        opacity: \".9\"\r\n                    }}\r\n                >\r\n                    {description}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Table\r\n                        celled\r\n                        style={{\r\n                            fontFamily: \"Times New Roman\",\r\n                            borderStyle: \"ridge\",\r\n                            fontSize: \"1.25vw\",\r\n                            borderWidth: \"5px\",\r\n                            borderRadius: \"2%\",\r\n                            backgroundColor: \"rgb(248, 246, 246\",\r\n                            opacity: \".9\"\r\n                        }}\r\n                    >\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell style={{ padding: \"3%\" }}>\r\n                                    Species\r\n                                </Table.HeaderCell>\r\n                                <Table.HeaderCell>Acres</Table.HeaderCell>\r\n                                <Table.HeaderCell>License</Table.HeaderCell>\r\n                                <Table.HeaderCell>\r\n                                    Water Quality\r\n                                </Table.HeaderCell>\r\n                                <Table.HeaderCell>\r\n                                    Operating Organization\r\n                                </Table.HeaderCell>\r\n                                <Table.HeaderCell>\r\n                                    Public Access\r\n                                </Table.HeaderCell>\r\n                                <Table.HeaderCell>Area</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell style={{ padding: \"3%\" }}>\r\n                                    {species.join(\", \")}\r\n                                </Table.Cell>\r\n                                <Table.Cell>{size_in_acres}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    {license_required === true ? \"Yes\" : \"No\"}\r\n                                </Table.Cell>\r\n                                <Table.Cell>{water_quality}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    {operating_organization}\r\n                                </Table.Cell>\r\n                                <Table.Cell>{public_access}</Table.Cell>\r\n                                <Table.Cell>{locality}</Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Messages />\r\n                </Grid.Row>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    lake: state.lakeReducer.currentLake\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {}\r\n)(LakeShow);\r\n","import { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport React from \"react\";\r\n// import history from \"../../history\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass MapContainer extends React.Component {\r\n  state = {\r\n    showingInfoWindow: false,\r\n    selectedCoordinates: {},\r\n    selectedLake: {}\r\n  };\r\n\r\n  onMarkerClick = lake => {\r\n    const lakeCoordinates = lake.coordinates;\r\n    this.setState({\r\n      selectedCoordinates: lakeCoordinates,\r\n      selectedLake: lake,\r\n      showingInfoWindow: !this.state.showingInfoWindow\r\n    });\r\n  };\r\n\r\n  displayMarkers = () => {\r\n    return this.props.lakes.map((lake, index) => {\r\n      return (\r\n        <Marker\r\n          onClick={e => this.onMarkerClick(lake, e)}\r\n          key={index}\r\n          id={index}\r\n          text=\"lake marker\"\r\n          position={{\r\n            lat: lake.coordinates.lat,\r\n            lng: lake.coordinates.lng\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  onInfoWindowOpen() {\r\n    const link = (\r\n      <button\r\n        style={{\r\n          background: \" none!important\",\r\n          border: \"none\",\r\n          padding: \"0!important\",\r\n          fontFamily: \"arial, sans-serif\",\r\n          color: \"#069\",\r\n          textDecoration: \"underline\",\r\n          cursor: \"pointer\"\r\n        }}\r\n        onClick={() => this.props.handleMarkerChoice(this.state.selectedLake)}\r\n      >\r\n        {this.state.selectedLake.name}\r\n      </button>\r\n    );\r\n    ReactDOM.render(\r\n      React.Children.only(link),\r\n      document.getElementById(\"name-link\")\r\n    );\r\n  }\r\n  onClose = () => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        selectedPlace: {}\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={11}\r\n        style={{\r\n          width: \"90%\",\r\n          height: \"700px\",\r\n          marginRight: \"0%\",\r\n          marginLeft: \"-45%\",\r\n          borderRadius: \"1%\",\r\n          opacity: \".9\"\r\n        }}\r\n        initialCenter={{ lat: 29.7604, lng: -95.3698 }}\r\n      >\r\n        {this.displayMarkers()}\r\n        <InfoWindow\r\n          position={this.state.selectedCoordinates}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n          onOpen={e => {\r\n            this.onInfoWindowOpen();\r\n          }}\r\n        >\r\n          {/* <h4 id=\"name-link\"></h4> */}\r\n          <p>{this.state.selectedLake.description}</p>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBDIzsWrPiktdWsGZ4f0EM4FLMHVslvki0\"\r\n})(MapContainer);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ClickOutside extends Component {\r\n  static propTypes = {\r\n    onClickOutside: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getContainer = this.getContainer.bind(this);\r\n    this.isTouch = false;\r\n  }\r\n\r\n  getContainer(ref) {\r\n    this.container = ref;\r\n  }\r\n\r\n  render() {\r\n    const { children, onClickOutside, ...props } = this.props;\r\n    return (\r\n      <div {...props} ref={this.getContainer}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"touchend\", this.handle, true);\r\n    document.addEventListener(\"click\", this.handle, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"touchend\", this.handle, true);\r\n    document.removeEventListener(\"click\", this.handle, true);\r\n  }\r\n\r\n  handle = e => {\r\n    if (e.type === \"touchend\") this.isTouch = true;\r\n    if (e.type === \"click\" && this.isTouch) return;\r\n    const { onClickOutside } = this.props;\r\n    const el = this.container;\r\n    if (el && !el.contains(e.target)) onClickOutside(e);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport SideNav, { NavItem, NavIcon, NavText } from \"@trendmicro/react-sidenav\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\n// import history from \"../../history\";\r\nimport ClickOutside from \"./clickOutside\";\r\nimport { showLogin, logoutUser } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    expanded: false,\r\n    showLogin: false\r\n  };\r\n  handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  handleLoginClick = async () => {\r\n    await this.setState({\r\n      showLogin: !this.state.showLogin\r\n    });\r\n    this.props.showLogin(this.state.showLogin);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ClickOutside\r\n        style={{}}\r\n        onClickOutside={() => {\r\n          this.setState({ expanded: false });\r\n        }}\r\n      >\r\n        <SideNav\r\n          style={{ backgroundColor: \"black\" }}\r\n          id=\"sideNav\"\r\n          onSelect={selected => {}}\r\n          defaultExpanded={this.state.expanded}\r\n          onMouseOver={() => {\r\n            this.setState({ expanded: true });\r\n          }}\r\n          onMouseOut={() => {\r\n            this.setState({ expanded: false });\r\n          }}\r\n        >\r\n          <SideNav.Nav>\r\n            <NavItem onClick={() => this.props.handleClick()} eventKey=\"home\">\r\n              <NavIcon>\r\n                <i\r\n                  className=\"fa fa-fw fa-home\"\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                />\r\n              </NavIcon>\r\n              <NavText style={{ fontSize: \"1.75vw\" }}>Home</NavText>\r\n            </NavItem>\r\n\r\n            <NavItem\r\n              eventKey=\"Login\"\r\n              onClick={() => {\r\n                this.handleLoginClick();\r\n                window.scrollTo(0, 0); ////scrolls to top of window when login clicked\r\n              }}\r\n            >\r\n              <NavIcon>\r\n                <i\r\n                  className=\"fas fa-sign-in-alt\"\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                />\r\n              </NavIcon>\r\n              <NavText style={{ fontSize: \"1.75vw\" }}>\r\n                <p>Login</p>\r\n              </NavText>\r\n            </NavItem>\r\n\r\n            <NavItem eventKey=\"Logout\">\r\n              <NavIcon>\r\n                <i\r\n                  className=\"fas fa-sign-out-alt\"\r\n                  style={{ fontSize: \"1.75em\" }}\r\n                />\r\n              </NavIcon>\r\n              <NavText style={{ fontSize: \"1.75vw\" }}>\r\n                <p\r\n                  onClick={() => {\r\n                    this.handleLogout();\r\n                    this.handleLoginClick();\r\n                  }}\r\n                >\r\n                  Logout\r\n                </p>\r\n              </NavText>\r\n            </NavItem>\r\n          </SideNav.Nav>\r\n        </SideNav>\r\n      </ClickOutside>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { showLogin, logoutUser }\r\n)(NavBar);\r\n","import React from \"react\";\r\nimport { Header, Container, Grid, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport LakeCard from \"./lakeCards\";\r\nimport LakeShow from \"./lakeShow\";\r\nimport MapContainer from \"../googleMaps/googleMaps\";\r\nimport { currentLake } from \"../actions/lakeActions\";\r\nimport NavBar from \"../navBar/navBar\";\r\n\r\nclass LakeIndex extends React.Component {\r\n    state = {\r\n        mapview: false,\r\n        showView: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    handleMapView = () => {\r\n        this.setState({\r\n            mapview: !this.state.mapview\r\n        });\r\n    };\r\n    handleShowView = lake => {\r\n        this.props.currentLake(lake);\r\n        this.setState({\r\n            showView: true\r\n        });\r\n    };\r\n    handleShowAll = () => {\r\n        this.setState({\r\n            showView: false\r\n        });\r\n    };\r\n\r\n    capitalizeUsername = name => {\r\n        if (name !== undefined) {\r\n            return name.charAt(0).toUpperCase() + name.slice(1);\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        // const token = localStorage.getItem('token')\r\n\r\n        const header = (\r\n            <Container text>\r\n                <i\r\n                    className=\"far fa-user\"\r\n                    style={{\r\n                        color: \"white\",\r\n                        position: \"absolute\",\r\n                        right: \"3%\",\r\n                        top: \".5%\",\r\n                        fontSize: \"1.5vw\"\r\n                    }}\r\n                >\r\n                    <p>Not Logged in</p>{\" \"}\r\n                </i>{\" \"}\r\n                <Header\r\n                    as=\"h1\"\r\n                    style={{\r\n                        marginTop: \"1%\"\r\n                    }}\r\n                >\r\n                    <p className=\"main-title\">\r\n                        {\" \"}\r\n                        Houston Area Freshwater Fishing{\" \"}\r\n                    </p>{\" \"}\r\n                </Header>{\" \"}\r\n            </Container>\r\n        );\r\n\r\n        const headerWithName = (\r\n            <Container text>\r\n                <i\r\n                    className=\"fas fa-user\"\r\n                    style={{\r\n                        display: \"inline\",\r\n                        position: \"absolute\",\r\n                        right: \"3%\",\r\n                        top: \".5%\",\r\n                        fontSize: \"1.5vw\",\r\n                        color: \"white\"\r\n                    }}\r\n                >\r\n                    <p> {this.capitalizeUsername(this.props.user.username)} </p>{\" \"}\r\n                </i>{\" \"}\r\n                <Header\r\n                    as=\"h1\"\r\n                    style={{\r\n                        textShadow: \"4px 4px rgb(173, 169, 169\",\r\n                        marginTop: \"1%\"\r\n                    }}\r\n                >\r\n                    <p className=\"main-title\">\r\n                        {\" \"}\r\n                        Houston Area Freshwater Fishing{\" \"}\r\n                    </p>{\" \"}\r\n                </Header>{\" \"}\r\n            </Container>\r\n        );\r\n\r\n        const lakeGrid = (\r\n            <Grid\r\n                id=\"lake-index\"\r\n                style={{\r\n                    margin: \"1%\"\r\n                }}\r\n                columns=\"1\"\r\n                centered={true}\r\n            >\r\n                <Grid.Row>\r\n                    {\" \"}\r\n                    {this.props.user === \"\" ? header : headerWithName}{\" \"}\r\n                </Grid.Row>{\" \"}\r\n                <Grid.Row>\r\n                    <Button\r\n                        color=\"blue\"\r\n                        size=\"large\"\r\n                        onClick={() => this.handleMapView()}\r\n                    >\r\n                        {\" \"}\r\n                        Toggle Map View{\" \"}\r\n                    </Button>{\" \"}\r\n                </Grid.Row>{\" \"}\r\n                {this.state.mapview ? (\r\n                    <Grid.Row\r\n                        style={{\r\n                            height: \"500px\"\r\n                        }}\r\n                    >\r\n                        <MapContainer\r\n                            lakes={this.props.lakes}\r\n                            handleMarkerChoice={this.handleShowView}\r\n                        />{\" \"}\r\n                    </Grid.Row>\r\n                ) : (\r\n                    <Grid.Row\r\n                        style={{\r\n                            marginLeft: \"4.5%\",\r\n                            marginTop: \"2%\"\r\n                        }}\r\n                    >\r\n                        <LakeCard handleClick={this.handleShowView} />{\" \"}\r\n                    </Grid.Row>\r\n                )}{\" \"}\r\n            </Grid>\r\n        );\r\n        return (\r\n            <div>\r\n                <NavBar handleClick={this.handleShowAll} />{\" \"}\r\n                {this.state.showView ? (\r\n                    <LakeShow handleClick={this.handleShowAll} />\r\n                ) : (\r\n                    lakeGrid\r\n                )}{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lakes: state.lakeReducer.lakes,\r\n    user: state.userReducer.currentUser,\r\n    showLogin: state.userReducer.showLogin,\r\n    showSignup: state.userReducer.showSignup\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        currentLake\r\n    }\r\n)(LakeIndex);\r\n","import React from \"react\";\r\nimport { Form, Container, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, showSignup, showLogin } from \"../actions/userActions\";\r\n\r\nclass Login extends React.Component {\r\n  componentDidMount() {}\r\n\r\n  state = {\r\n    password: null,\r\n    email: null,\r\n    loggedIn: null,\r\n    error: \"\",\r\n    showSignup: false,\r\n    currentUser: \"\"\r\n  };\r\n\r\n  handleShowSignupClick = async () => {\r\n    await this.setState({\r\n      showSignup: !this.state.showSignup\r\n    });\r\n    await this.props.showLogin(false);\r\n    this.props.showSignup(this.state.showSignup);\r\n  };\r\n  handleCancelClick = () => {\r\n    this.props.showLogin(false);\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const data = this.state;\r\n    await this.props.loginUser(data);\r\n    await this.setState({\r\n      password: null,\r\n      email: null\r\n    });\r\n\r\n    if (this.props.currentUser.error) {\r\n      window.alert(this.props.currentUser.error);\r\n      let form = document.getElementById(\"login-form\");\r\n      form.reset();\r\n    } else {\r\n      let name = this.props.currentUser.username;\r\n      const capitalizedName = name.charAt(0).toUpperCase() + name.slice(1);\r\n      window.alert(`Welcome ${capitalizedName}`);\r\n      this.props.showLogin(false);\r\n    }\r\n  };\r\n  handleChange = e => {\r\n    const info = e.target.value;\r\n\r\n    if (e.target.name === \"password\") {\r\n      this.setState({\r\n        password: info\r\n      });\r\n    } else if (e.target.name === \"email\") {\r\n      this.setState({\r\n        email: info\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"login-div\" style={{ width: \"90%\", height: \"40%\" }}>\r\n        <h1\r\n          style={{\r\n            marginTop: \"3%\",\r\n            color: \"white\",\r\n            fontFamily: \"Times New Roman\",\r\n            fontSize: \"3vw\"\r\n          }}\r\n        >\r\n          Please Login\r\n        </h1>\r\n\r\n        <Form\r\n          id=\"login-form\"\r\n          onSubmit={e => this.handleSubmit(e)}\r\n          style={{ width: \"60%\", marginLeft: \"20%\", marginTop: \"4%\" }}\r\n        >\r\n          <Form.Group style={{ fontSize: \"150%\" }} widths=\"equal\">\r\n            <Form.Input\r\n              fluid\r\n              name=\"email\"\r\n              label=\"Registered  Email\"\r\n              placeholder=\"Email@email.com\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              onChange={e => this.handleChange(e)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Button size=\"medium\">Login</Form.Button>\r\n        </Form>\r\n        <Button\r\n          onClick={() => this.handleCancelClick()}\r\n          color=\"red\"\r\n          tabIndex={1}\r\n          size=\"medium\"\r\n          style={{ margin: \"1%\" }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <h4\r\n          style={{ margin: \"1%\" }}\r\n          onClick={() => this.handleShowSignupClick()}\r\n        >\r\n          <button\r\n            style={{\r\n              backgroundColor: \"lightBlue\",\r\n              borderRadius: \"3%\",\r\n              cursor: \"pointer\",\r\n              textDecoration: \"underline\"\r\n            }}\r\n          >\r\n            Need to Create an Account?\r\n          </button>\r\n        </h4>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  showLogin: state.userReducer.showLogin\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser, showSignup, showLogin }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Form, Container, Button } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postUser, showLogin, showSignup } from \"../actions/userActions\";\r\n\r\nclass SignUp extends React.Component {\r\n  state = {\r\n    password: null,\r\n    username: null,\r\n    email: null,\r\n    error: null\r\n  };\r\n\r\n  handleCancelClick = async () => {\r\n    await this.props.showSignup(false);\r\n    this.props.showLogin(true);\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const data = this.state;\r\n    await this.props.postUser(data);\r\n    this.setState({\r\n      password: null,\r\n      email: null\r\n    });\r\n\r\n    if (this.props.currentUser.error) {\r\n      window.alert(this.props.currentUser.error);\r\n      let form = document.getElementById(\"signup-form\");\r\n      form.reset();\r\n    } else {\r\n      window.alert(\"Account Created!\");\r\n      this.props.showSignup(false);\r\n      this.props.showLogin(true);\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    const info = e.target.value;\r\n    if (e.target.name === \"password\") {\r\n      this.setState({\r\n        password: info\r\n      });\r\n    } else if (e.target.name === \"username\") {\r\n      this.setState({\r\n        username: info\r\n      });\r\n    } else if (e.target.name === \"email\") {\r\n      this.setState({\r\n        email: info\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"signup-div\" style={{ width: \"90%\", height: \"40%\" }}>\r\n        <h1\r\n          style={{\r\n            marginTop: \"3%\",\r\n            color: \"white\",\r\n            fontFamily: \"Times New Roman\",\r\n            fontSize: \"3vw\"\r\n          }}\r\n        >\r\n          Please Sign Up!\r\n        </h1>\r\n        {this.state.error ? <div>{this.state.error}</div> : null}\r\n        <Form\r\n          id=\"signup-form\"\r\n          onSubmit={e => this.handleSubmit(e)}\r\n          style={{ width: \"80%\", marginLeft: \"10%\", marginTop: \"5%\" }}\r\n        >\r\n          <Form.Group style={{ fontSize: \"150%\" }} widths=\"equal\">\r\n            <Form.Input\r\n              fluid\r\n              name=\"username\"\r\n              label=\"Username\"\r\n              placeholder=\"Username\"\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              placeholder=\"Email@email.com\"\r\n              onChange={event => this.handleChange(event)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Button>Submit</Form.Button>\r\n          <Button\r\n            onClick={() => this.handleCancelClick()}\r\n            color=\"red\"\r\n            tabIndex={1}\r\n            size=\"medium\"\r\n            style={{ margin: \"1%\" }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.userReducer.currentUser,\r\n  showSignup: state.userReducer.showSignup,\r\n  showLogin: state.userReducer.showLogin\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { postUser, showLogin, showSignup }\r\n)(SignUp);\r\n","import React from \"react\";\r\n// import history from \"./history\";\r\n// import { Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport LakeIndex from \"./components/lakes/lakeIndex\";\r\nimport Login from \"./components/userForms/login\";\r\nimport SignUp from \"./components/userForms/signUp\";\r\n// import LakeShow from \"./components/lakes/lakeShow\";\r\n// import NavBar from \"./components/navBar/navBar\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchLakes } from \"./components/actions/lakeActions\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchLakes();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.showLogin ? <Login /> : null}\r\n        {this.props.showSignup ? <SignUp /> : null}\r\n        {/* <Router history={history}>\r\n          <NavBar/>\r\n          <Route exact path='/' component={LakeIndex}/>\r\n        </Router> */}\r\n\r\n        <LakeIndex />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lake: state.lakeReducer.currentLake,\r\n  showLogin: state.userReducer.showLogin,\r\n  showSignup: state.userReducer.showSignup\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchLakes }\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { FETCH_LAKES, CURRENT_LAKE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  lakes: [],\r\n  currentLake: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_LAKES:\r\n      return {\r\n        ...state,\r\n        lakes: action.payload\r\n      };\r\n    case CURRENT_LAKE:\r\n      return {\r\n        ...state,\r\n        currentLake: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_MESSAGES, POST_MESSAGE, PATCH_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  messages: [],\r\n  images: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: action.payload\r\n      };\r\n\r\n    case POST_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload] //existing array plus new object!\r\n      };\r\n    case PATCH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: state.messages.map(message =>\r\n          message._id === action.payload._id\r\n            ? {\r\n                // finds matching message and replaces the replies Array\r\n                ...message,\r\n                replies: action.payload.replies\r\n              }\r\n            : message\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  POST_USER,\r\n  LOGIN_USER,\r\n  SHOW_LOGIN,\r\n  SHOW_SIGNUP,\r\n  LOGOUT_USER\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  currentUser: \"\",\r\n  showLogin: false,\r\n  showSignup: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case POST_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case SHOW_LOGIN:\r\n      return {\r\n        ...state,\r\n        showLogin: action.payload\r\n      };\r\n    case SHOW_SIGNUP:\r\n      return {\r\n        ...state,\r\n        showSignup: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport lakeReducer from \"./lakeReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  lakeReducer,\r\n  messageReducer,\r\n  userReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./components/reducers\";\r\n\r\n// const initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport  { store } from './store'\r\n\r\n\r\nReactDOM.render(\r\n\r\n<Provider store={store}>\r\n        <App/> \r\n</Provider>,\r\n\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}